{"ast":null,"code":"import shortid from \"shortid\";\nimport { ADD_POST_TO_ME } from \"./user\";\nimport produce from 'immer';\nimport faker from \"faker\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport var generateDummyPost = function generateDummyPost(number) {\n  return Array(number).fill().map(function () {\n    return {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: faker.name.findName()\n      },\n      content: faker.lorem.paragraph(),\n      Images: [{\n        src: faker.image.image()\n      }],\n      Comments: [{\n        User: {\n          id: shortid.generate(),\n          nickname: faker.name.findName()\n        },\n        content: faker.lorem.sentence()\n      }]\n    };\n  });\n};\ninitialState.mainPosts = initialState.mainPosts.concat();\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var addPost = function addPost(data) {\n  return {\n    type: ADD_POST_REQUEST,\n    data: data\n  };\n};\nexport var addComment = function addComment(data) {\n  return {\n    type: ADD_COMMENT_REQUEST,\n    data: data\n  };\n};\nvar dummyPost = function dummyPost(data) {\n  return {\n    id: data.id,\n    content: data.content,\n    User: {\n      id: 1,\n      nickname: 'YJ22'\n    },\n    Images: [],\n    Comments: []\n  };\n};\nvar dummyComment = function dummyComment(data) {\n  return {\n    id: shortid.generate(),\n    content: data,\n    User: {\n      id: 1,\n      nickname: 'YJ22'\n    }\n  };\n};\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(function (v) {\n          return v.id !== action.data;\n        });\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          var post = draft.mainPosts.find(function (v) {\n            return v.id === action.data.postId;\n          });\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortid","ADD_POST_TO_ME","produce","faker","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","generateDummyPost","number","Array","fill","map","id","generate","User","nickname","name","findName","content","lorem","paragraph","Images","src","image","Comments","sentence","concat","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["C:/Dev/next_react_node/front/reducers/post.js"],"sourcesContent":["import shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME } from \"./user\";\r\nimport produce from 'immer';\r\nimport faker from \"faker\";\r\n\r\nexport const initialState = {\r\n\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n}\r\n\r\nexport const generateDummyPost = (number)=>  Array(number).fill().map(()=>({\r\n    id: shortid.generate(),\r\n    User:{\r\n        id: shortid.generate(),\r\n        nickname:faker.name.findName(),\r\n    },\r\n    content:faker.lorem.paragraph(),\r\n    Images:[{\r\n        src:faker.image.image(),\r\n    }],\r\n    Comments:[{\r\n        User:{\r\n            id: shortid.generate(),\r\n            nickname:faker.name.findName(),\r\n        },\r\n        content:faker.lorem.sentence(),\r\n    }],\r\n\r\n}))\r\n\r\n\r\ninitialState.mainPosts=initialState.mainPosts.concat(  \r\n\r\n);\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'YJ22'\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n})\r\n\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortid.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'YJ22'\r\n    },\r\n\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    return produce(state,(draft)=>{\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError= null;\r\n                break;\r\n\r\n              \r\n            case ADD_POST_SUCCESS:\r\n          \r\n                \r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.addPostLoading= false;\r\n                draft.addPostDone= true;\r\n                break;\r\n          \r\n    \r\n            case ADD_POST_FAILURE:\r\n                \r\n                 \r\n                    draft.addPostLoading= false;\r\n                    draft.addPostError= action.error;\r\n                    break;\r\n    \r\n    \r\n            case REMOVE_POST_REQUEST:\r\n               \r\n               \r\n                    draft.removePostLoading= true;\r\n                    draft.removePostDone= false;\r\n                    draft.removePostError= null;\r\n                    break;\r\n            case REMOVE_POST_SUCCESS:\r\n              \r\n                   \r\n                    draft.mainPosts= draft.mainPosts.filter((v)=>v.id !== action.data);\r\n                    draft.removePostLoading= false;\r\n                    draft.removePostDone= true;\r\n                    break;\r\n    \r\n            case REMOVE_POST_FAILURE:\r\n              \r\n                    draft.removePostLoading= false;\r\n                    draft.removePostError= action.error;\r\n                    break;\r\n            case ADD_COMMENT_REQUEST:\r\n              \r\n                    draft.addCommentLoading= true;\r\n                    draft.addCommentDone= false;\r\n                    draft.addCommentError= null;\r\n                    break;\r\n            case ADD_COMMENT_SUCCESS: {\r\n\r\n                const post =draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading= false;\r\n                draft.addCommentDone= true;\r\n                break;\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n             \r\n                    draft.addCommentLoading= false;\r\n                    draft.addCommentError= action.error;\r\n                    break;\r\n    \r\n    \r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n  \r\n};\r\n\r\n\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}