{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST } from \"../reducers/user\";\nimport wrapper from \"../store/configureStore\";\nimport { END } from 'redux-saga';\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    retweetError\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    if (retweetError) {\n      alert(retweetError);\n    }\n  }, [retweetError]);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          var _mainPosts;\n          const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n          dispatch({\n            type: LOAD_POSTS_REQUEST,\n            lastId\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading, mainPosts]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 38\n    }\n  })));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  console.log('컨텍스트');\n  console.log(context.store);\n  context.store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  context.store.dispatch({\n    type: LOAD_POSTS_REQUEST\n  });\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","wrapper","END","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostsLoading","retweetError","post","alert","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","type","addEventListener","removeEventListener","map","getServerSideProps","context","store","sagaTask","toPromise"],"sources":["C:/Dev/next_react_node/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport {LOAD_MY_INFO_REQUEST} from \"../reducers/user\"\r\nimport wrapper from \"../store/configureStore\";\r\nimport {END} from 'redux-saga'\r\n\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePost,loadPostsLoading,retweetError } = useSelector((state) => state.post);\r\n    \r\n    \r\n    useEffect(()=>{\r\n        if(retweetError){\r\n            alert(retweetError)\r\n        }\r\n    },[retweetError])\r\n    \r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight)\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight-300) {\r\n            \r\n                if (hasMorePost && !loadPostsLoading) {\r\n                    const lastId = mainPosts[mainPosts.length-1]?.id;\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST,\r\n                        lastId,\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n        \r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll)\r\n        }\r\n    }, [hasMorePost,loadPostsLoading,mainPosts])\r\n    \r\n    \r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport const getServerSideProps = wrapper.getServerSideProps(async(context)=>{\r\n    console.log('컨텍스트')\r\n    console.log(context.store)\r\n    context.store.dispatch({\r\n        type:LOAD_MY_INFO_REQUEST,\r\n    })\r\n    \r\n    context.store.dispatch({\r\n        type: LOAD_POSTS_REQUEST,\r\n    });\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n\r\n})\r\n\r\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module"}