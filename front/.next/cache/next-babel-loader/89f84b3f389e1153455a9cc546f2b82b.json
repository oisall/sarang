{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, takeLatest, delay, put, call } from \"redux-saga/effects\";\nimport { LOG_IN_SUCCESS, SIGN_UP_SUCCESS, SIGN_UP_REQUEST, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_FAILURE, UNFOLLOW_SUCCESS } from \"../reducers/user\";\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\nfunction* loadMyInfo(action) {\n  try {\n    console.log('saga login');\n    const result = yield call(loadMyInfoAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logInAPI(data) {\n  return axios.post('/user/login', data);\n}\nfunction* logIn(action) {\n  try {\n    console.log('saga login');\n    const result = yield call(logInAPI, action.data);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n      // data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI(data) {\n  return axios.post('/user', data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n      // data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\nfunction* follow(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction unfollowAPI(data) {\n  return axios.post('/api/unfollow', data);\n}\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLoadMyInfo() {\n  yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLoadMyInfo), fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp)]);\n}","map":{"version":3,"names":["axios","all","fork","takeLatest","delay","put","call","LOG_IN_SUCCESS","SIGN_UP_SUCCESS","SIGN_UP_REQUEST","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_FAILURE","UNFOLLOW_SUCCESS","loadMyInfoAPI","get","loadMyInfo","action","console","log","result","data","type","err","error","response","logInAPI","post","logIn","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unfollowAPI","unfollow","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","userSaga"],"sources":["C:/Dev/next_react_node/front/sagas/user.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all ,fork,takeLatest,delay,put,call} from \"redux-saga/effects\";\r\nimport { LOG_IN_SUCCESS,SIGN_UP_SUCCESS,SIGN_UP_REQUEST,FOLLOW_FAILURE,FOLLOW_REQUEST,FOLLOW_SUCCESS,LOG_IN_FAILURE,LOG_IN_REQUEST,LOG_OUT_FAILURE,LOG_OUT_REQUEST,LOG_OUT_SUCCESS,SIGN_UP_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_FAILURE, UNFOLLOW_SUCCESS } from \"../reducers/user\";\r\n\r\n\r\n\r\nfunction loadMyInfoAPI() {\r\n    return axios.get('/user');\r\n}\r\n\r\nfunction* loadMyInfo(action) {\r\n    try {\r\n        console.log('saga login')\r\n        const result = yield call(loadMyInfoAPI,action.data)\r\n\r\n        yield put({\r\n\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        \r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/user/login',data);\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga login')\r\n        const result = yield call(logInAPI,action.data)\r\n\r\n        yield put({\r\n\r\n            type: LOG_IN_SUCCESS,\r\n            data: result.data\r\n        \r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOG_IN_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction logOutAPI() {\r\n\r\n    return axios.post('/user/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        yield call(logOutAPI)\r\n\r\n        yield put({\r\n\r\n            type: LOG_OUT_SUCCESS,\r\n            // data: result.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOG_OUT_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction signUpAPI(data) {\r\n    return axios.post('/user',data)\r\n}\r\n\r\nfunction* signUp(action) {\r\n    try {\r\n\r\n        const result = yield call(signUpAPI,action.data);\r\n        console.log(result);\r\n\r\n        yield put({\r\n\r\n            type: SIGN_UP_SUCCESS,\r\n            // data: result.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: SIGN_UP_FAILURE,\r\n            error: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n     \r\n     \r\n        yield put({\r\n\r\n            type: FOLLOW_SUCCESS,\r\n            data:  action.data,\r\n             \r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: FOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/unfollow', data)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n\r\n\r\n        yield put({\r\n\r\n            type: UNFOLLOW_SUCCESS,\r\n            data:  action.data,\r\n             \r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: UNFOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\nfunction* watchLoadMyInfo() {\r\n    yield takeLatest(LOAD_MY_INFO_REQUEST, loadMyInfo);\r\n}\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\n\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest(LOG_IN_REQUEST, logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest(LOG_OUT_REQUEST,logOut);\r\n}\r\n\r\nfunction* watchSignUp() {\r\n    yield takeLatest(SIGN_UP_REQUEST,signUp);\r\n}\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLoadMyInfo),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n        fork(watchSignUp),\r\n\r\n    ])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}