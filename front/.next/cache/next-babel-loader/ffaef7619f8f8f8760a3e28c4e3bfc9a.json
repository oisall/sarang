{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, put, fork, takeLatest } from \"redux-saga/effects\";\nimport { REMOVE_POST_SUCCESS, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport shortid from \"shortid\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nfunction loadPostAPI(data) {\n  return axios.get('/api/post', data);\n}\nfunction* loadPost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    const id = shortid.generate();\n    console.log(action.data);\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    const id = shortid.generate();\n    console.log(action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI,action.data)\n    yield delay(1000);\n    console.log('코멘트 사가');\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchLoadPost() {\n  yield takeLatest(LOAD_POSTS_REQUEST, loadPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","delay","put","fork","takeLatest","REMOVE_POST_SUCCESS","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","LOAD_POSTS_REQUEST","shortid","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","loadPost","action","id","generate","console","log","type","LOAD_POSTS_SUCCESS","content","err","LOAD_POSTS_FAILURE","response","addPostAPI","post","addPost","removePostAPI","delete","removePost","error","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Dev/next_react_node/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, put, fork, takeLatest } from \"redux-saga/effects\";\r\nimport { REMOVE_POST_SUCCESS,ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\n\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get('/api/post', data)\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: ADD_POST_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n        yield put({\r\n            type: ADD_POST_TO_ME, data:id\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME, \r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n        yield put({\r\n\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n\r\n        // const result = yield call(addCommentAPI,action.data)\r\n        yield delay(1000);\r\n        console.log('코멘트 사가')\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchLoadPost() {\r\n    yield takeLatest(LOAD_POSTS_REQUEST, loadPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}