{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost } from '../reducers/post';\nconst PostForm = () => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const dispatch = useDispatch();\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  });\n  const imageInput = useRef();\n  const {\n    imagePaths\n  } = useSelector(state => state.post);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost);\n  }, []);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.onClick();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","React","useCallback","useRef","useState","useDispatch","useSelector","addPost","PostForm","text","setText","dispatch","onChangeText","e","target","value","imageInput","imagePaths","state","post","onSubmit","onClickImageUpload","current","onClick","margin","float","map","v","display","width"],"sources":["C:/Dev/next_react_node/front/components/PostForm.js"],"sourcesContent":["\r\nimport { Form, Input, Button } from 'antd';\r\nimport  React,{ useCallback, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const [text,setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const onChangeText =useCallback((e)=>{\r\n        setText(e.target.value);\r\n    })\r\n    const imageInput = useRef();\r\n    const { imagePaths } = useSelector((state) => state.post);\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost)\r\n    }, []);\r\n\r\n    const onClickImageUpload=useCallback(()=>{\r\nimageInput.current.onClick();\r\n    },[imageInput.current])\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder='어떤 신기한 일이 있었나요?'\r\n            />\r\n            <div>\r\n                <input type='file' multiple hidden ref={imageInput} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type='primary' style={{ float: 'right' }} htmlType='submit'>짹짹</Button>\r\n\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={v} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default PostForm;"],"mappings":";;AACA,SAASA,IAAI,EAAEC,KAAK,EAAEC,MAAM,QAAQ,MAAM;AAC1C,OAAQC,KAAK,IAAGC,WAAW,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC5D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,kBAAkB;AAE1C,MAAMC,QAAQ,GAAG,MAAM;EACnB,MAAM;IAAA,GAACC,IAAI;IAAA,GAACC;EAAO,IAAIN,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMO,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,YAAY,GAAEV,WAAW,CAAEW,CAAC,IAAG;IACjCH,OAAO,CAACG,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC,CAAC;EACF,MAAMC,UAAU,GAAGb,MAAM,EAAE;EAC3B,MAAM;IAAEc;EAAW,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACzD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,MAAM;IAC/BS,QAAQ,CAACJ,OAAO,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,kBAAkB,GAACnB,WAAW,CAAC,MAAI;IAC7Cc,UAAU,CAACM,OAAO,CAACC,OAAO,EAAE;EACxB,CAAC,EAAC,CAACP,UAAU,CAACM,OAAO,CAAC,CAAC;EACvB,OACI,MAAC,IAAI;IAAC,KAAK,EAAE;MAAEE,MAAM,EAAE;IAAc,CAAE;IAAC,OAAO,EAAC,qBAAqB;IAAC,QAAQ,EAAEJ,QAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACrF,MAAC,KAAK,CAAC,QAAQ;IACX,KAAK,EAAEX,IAAK;IACZ,QAAQ,EAAEG,YAAa;IACvB,SAAS,EAAE,GAAI;IACf,WAAW,EAAC,wEAAiB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAC/B,EACF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAO,IAAI,EAAC,MAAM;IAAC,QAAQ;IAAC,MAAM;IAAC,GAAG,EAAEI,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACtD,MAAC,MAAM;IAAC,OAAO,EAAEK,kBAAmB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CAAiB,EACrD,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,KAAK,EAAE;MAAEI,KAAK,EAAE;IAAQ,CAAE;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAE7E,EACN;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKR,UAAU,CAACS,GAAG,CAAEC,CAAC,IACd;IAAK,GAAG,EAAEA,CAAE;IAAC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAe,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5C;IAAK,GAAG,EAAED,CAAE;IAAC,KAAK,EAAE;MAAEE,KAAK,EAAE;IAAQ,CAAE;IAAC,GAAG,EAAEF,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,MAAM;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CACjB,CAIb,CAAC,CACA,CACH;AAGf,CAAC;AAED,eAAenB,QAAQ"},"metadata":{},"sourceType":"module"}