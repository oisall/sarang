{"ast":null,"code":"var __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST, REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\nconst PostForm = () => {\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n  const dispatch = useDispatch();\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const imageInput = useRef();\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onChangeText = useCallback(e => {\n    setText(e.target.value);\n  });\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요.');\n    }\n    const formData = new FormData();\n    imagePaths.forEach(p => {\n      formData.append('image', p);\n    });\n    formData.append('content', text);\n    return dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const onChangeImages = useCallback(e => {\n    console.log('images', e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  const onRemoveImage = useCallback(index => () => {\n    dispatch({\n      type: REMOVE_IMAGE,\n      data: index\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\"\n  }), __jsx(\"div\", null, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), __jsx(Button, {\n    onClick: onClickImageUpload\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\"\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", null, imagePaths.map((v, i) => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    }\n  }, __jsx(\"img\", {\n    src: `http://localhost:3065/${v}`,\n    style: {\n      width: '200px'\n    },\n    alt: v\n  }), __jsx(\"div\", null, __jsx(Button, {\n    onClick: onRemoveImage(i)\n  }, \"\\uC81C\\uAC70\"))))));\n};\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","addPost","UPLOAD_IMAGES_REQUEST","REMOVE_IMAGE","ADD_POST_REQUEST","PostForm","text","setText","dispatch","imagePaths","addPostDone","state","post","imageInput","onChangeText","e","target","value","onSubmit","trim","alert","formData","FormData","forEach","p","append","type","data","onClickImageUpload","current","click","onChangeImages","console","log","files","imageFormData","call","f","onRemoveImage","index","margin","float","map","v","i","display","width"],"sources":["C:/Dev/next_react_node/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport  React,{ useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost,UPLOAD_IMAGES_REQUEST,REMOVE_IMAGE, ADD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const [text,setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const { imagePaths,addPostDone } = useSelector((state) => state.post);\r\n    const imageInput = useRef();\r\n    useEffect(()=>{\r\n\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    },[addPostDone])\r\n\r\n\r\n\r\n    const onChangeText =useCallback((e)=>{\r\n        setText(e.target.value);\r\n    })\r\n\r\n\r\n    const onSubmit = useCallback(() => {\r\n        if(!text || !text.trim()){\r\n            return alert('게시글을 작성하세요.');\r\n        }\r\n\r\n        const formData = new FormData();\r\n        imagePaths.forEach((p)=>{\r\n            formData.append('image',p);\r\n\r\n        });\r\n        formData.append('content',text);\r\n\r\n      return  dispatch({\r\n            type:ADD_POST_REQUEST,\r\n            data:formData\r\n        })\r\n       \r\n    }, [text,imagePaths]);\r\n\r\n    const onClickImageUpload=useCallback(()=>{\r\nimageInput.current.click();\r\n    },[imageInput.current])\r\n\r\nconst onChangeImages = useCallback((e)=>{\r\n    console.log('images',e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files,(f)=>{\r\n        imageFormData.append('image',f);\r\n    });\r\n    dispatch({\r\n        type:UPLOAD_IMAGES_REQUEST,\r\n        data:imageFormData\r\n    })\r\n})\r\n\r\nconst onRemoveImage=useCallback((index)=>()=>{\r\n    dispatch({\r\n        type: REMOVE_IMAGE,\r\n        data:index\r\n    })\r\n})\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder='어떤 신기한 일이 있었나요?'\r\n            />\r\n            <div>\r\n                <input type='file' name='image' multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type='primary' style={{ float: 'right' }} htmlType='submit'>짹짹</Button>\r\n\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v,i) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button onClick={onRemoveImage(i)}>제거</Button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}