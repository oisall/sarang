{"ast":null,"code":"import shortid from \"shortid\";\nimport { ADD_POST_TO_ME } from \"./user\";\nimport produce from 'immer';\nexport const initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  loadPostsLoading: false,\n  loadPostsDone: false,\n  loadPostsError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null,\n  hasMorePost: true\n};\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case LOAD_POSTS_REQUEST:\n        draft.loadPostsLoading = true;\n        draft.loadPostsDone = false;\n        draft.loadPostsError = null;\n        break;\n      case LOAD_POSTS_SUCCESS:\n        console.log('성공');\n        draft.mainPosts = action.data.concat(draft.mainPosts);\n        draft.loadPostsLoading = false;\n        draft.loadPostsDone = true;\n        draft.hasMorePost = draft.mainPosts.length < 50;\n        break;\n      case LOAD_POSTS_FAILURE:\n        draft.loadPostsLoading = false;\n        draft.loadPostsError = action.error;\n        break;\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(action.data);\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.PostId);\n          post.Comments.unshift(action.data.content);\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortid","ADD_POST_TO_ME","produce","initialState","mainPosts","imagePaths","addPostLoading","addPostDone","addPostError","loadPostsLoading","loadPostsDone","loadPostsError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","hasMorePost","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","reducer","state","action","draft","console","log","concat","length","error","unshift","filter","v","id","post","find","PostId","Comments","content"],"sources":["C:/Dev/next_react_node/front/reducers/post.js"],"sourcesContent":["import shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME } from \"./user\";\r\nimport produce from 'immer';\r\n\r\n\r\nexport const initialState = {\r\n\r\n    mainPosts: [],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    loadPostsLoading: false,\r\n    loadPostsDone: false,\r\n    loadPostsError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n    hasMorePost:true,\r\n}\r\n\r\n\r\n\r\n\r\nexport const LOAD_POSTS_REQUEST = 'LOAD_POSTS_REQUEST';\r\nexport const LOAD_POSTS_SUCCESS = 'LOAD_POSTS_SUCCESS';\r\nexport const LOAD_POSTS_FAILURE = 'LOAD_POSTS_FAILURE';\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\n\r\n\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    return produce(state,(draft)=>{\r\n        switch (action.type) {\r\n\r\n            case LOAD_POSTS_REQUEST:\r\n                draft.loadPostsLoading = true;\r\n                draft.loadPostsDone= false;\r\n                draft.loadPostsError= null;\r\n                break;\r\n\r\n              \r\n            case LOAD_POSTS_SUCCESS:\r\n          \r\n                console.log('성공')\r\n                draft.mainPosts= action.data.concat(draft.mainPosts);\r\n                draft.loadPostsLoading= false;\r\n                draft.loadPostsDone= true;\r\n                draft.hasMorePost= draft.mainPosts.length<50;\r\n                break;\r\n\r\n\r\n            case LOAD_POSTS_FAILURE:\r\n            \r\n                    draft.loadPostsLoading= false;\r\n                    draft.loadPostsError= action.error;\r\n                    break;\r\n\r\n\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError= null;\r\n                break;\r\n\r\n              \r\n            case ADD_POST_SUCCESS:\r\n          \r\n                \r\n                draft.mainPosts.unshift(action.data);\r\n                draft.addPostLoading= false;\r\n                draft.addPostDone= true;\r\n                break;\r\n          \r\n    \r\n            case ADD_POST_FAILURE:\r\n                \r\n                 \r\n                    draft.addPostLoading= false;\r\n                    draft.addPostError= action.error;\r\n                    break;\r\n    \r\n    \r\n            case REMOVE_POST_REQUEST:\r\n               \r\n               \r\n                    draft.removePostLoading= true;\r\n                    draft.removePostDone= false;\r\n                    draft.removePostError= null;\r\n                    break;\r\n            case REMOVE_POST_SUCCESS:\r\n              \r\n                   \r\n                    draft.mainPosts= draft.mainPosts.filter((v)=>v.id !== action.data);\r\n                    draft.removePostLoading= false;\r\n                    draft.removePostDone= true;\r\n                    break;\r\n    \r\n            case REMOVE_POST_FAILURE:\r\n              \r\n                    draft.removePostLoading= false;\r\n                    draft.removePostError= action.error;\r\n                    break;\r\n            case ADD_COMMENT_REQUEST:\r\n              \r\n                    draft.addCommentLoading= true;\r\n                    draft.addCommentDone= false;\r\n                    draft.addCommentError= null;\r\n                    break;\r\n            case ADD_COMMENT_SUCCESS: {\r\n\r\n                const post =draft.mainPosts.find((v)=>v.id===action.data.PostId);\r\n                post.Comments.unshift(action.data.content);\r\n                draft.addCommentLoading= false;\r\n                draft.addCommentDone= true;\r\n                break;\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n             \r\n                    draft.addCommentLoading= false;\r\n                    draft.addCommentError= action.error;\r\n                    break;\r\n    \r\n    \r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n  \r\n};\r\n\r\n\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}