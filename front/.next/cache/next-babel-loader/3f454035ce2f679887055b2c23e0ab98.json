{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, put, fork, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport { LIKE_POST_REQUEST, UNLIKE_POST_REQUEST, generateDummyPost, REMOVE_POST_SUCCESS, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_SUCCESS, LIKE_POST_FAILURE } from \"../reducers/post\";\nimport { ADD_POST_TO_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, REMOVE_POST_OF_ME, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\nfunction likePostAPI(data) {\n  return axios.get('/posts', data);\n}\nfunction* likePost(action) {\n  try {\n    const result = yield call(likePostAPI, action.data);\n    console.log(action.data + 'data 뭐야 씨발');\n    yield put({\n      type: LIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction unlikePostAPI(data) {\n  return axios.get('/posts', data);\n}\nfunction* unlikePost(action) {\n  try {\n    const result = yield call(unlikePostAPI, action.data);\n    console.log(action.data + 'data 뭐야 씨발');\n    yield put({\n      type: UNLIKE_POST_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: UNLIKE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction loadPostsAPI(data) {\n  return axios.get('/posts', data);\n}\nfunction* loadPosts(action) {\n  try {\n    const result = yield call(loadPostsAPI, action.data);\n    console.log(action.data + 'data 뭐야 씨발');\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\n\n// function loadPostAPI(data) {\n//     return axios.get('/post', data)\n// }\n\n// function* loadPost(action) {\n//     try {\n\n//         const result = yield call(loadPostAPI,action.data)\n\n//         console.log(action.data+'data 뭐야 씨발')\n\n//         yield put({\n\n//             type: LOAD_POSTS_SUCCESS,\n//             data: result.data,\n\n//         });\n\n//     } catch (err) {\n\n//         yield put({\n\n//             type: LOAD_POSTS_FAILURE,\n//             data: err.response.data\n//         })\n//     }\n// }\n\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    console.log(action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log('코멘트');\n    console.log(result);\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchLikePost() {\n  yield takeLatest(LIKE_POST_REQUEST, likePost);\n}\nfunction* watchUnlikePost() {\n  yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\n// function* watchLoadPost() {\n//     yield throttle(5000,LOAD_POSTS_REQUEST, loadPost);\n// }\nfunction* watchLoadPosts() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPosts);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLikePost), fork(watchUnlikePost),\n  // fork(watchLoadPost),\n  fork(watchLoadPosts), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","delay","put","fork","takeLatest","throttle","call","LIKE_POST_REQUEST","UNLIKE_POST_REQUEST","generateDummyPost","REMOVE_POST_SUCCESS","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","ADD_POST_TO_ME","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","REMOVE_POST_OF_ME","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","likePostAPI","data","get","likePost","action","result","console","log","type","err","response","unlikePostAPI","unlikePost","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","loadPostsAPI","loadPosts","addPostAPI","post","content","addPost","id","removePostAPI","delete","removePost","error","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","watchLikePost","watchUnlikePost","watchAddPost","watchLoadPosts","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Dev/next_react_node/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, put, fork, takeLatest, throttle,call } from \"redux-saga/effects\";\r\nimport {LIKE_POST_REQUEST,UNLIKE_POST_REQUEST, generateDummyPost,REMOVE_POST_SUCCESS,ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE, LIKE_POST_SUCCESS, LIKE_POST_FAILURE } from \"../reducers/post\";\r\nimport { ADD_POST_TO_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, REMOVE_POST_OF_ME, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\r\n\r\nfunction likePostAPI(data) {\r\n    return axios.get('/posts', data)\r\n}\r\n\r\nfunction* likePost(action) {\r\n    try {\r\n\r\n        const result = yield call(likePostAPI,action.data)\r\n   \r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: LIKE_POST_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LIKE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction unlikePostAPI(data) {\r\n    return axios.get('/posts', data)\r\n}\r\n\r\nfunction* unlikePost(action) {\r\n    try {\r\n\r\n        const result = yield call(unlikePostAPI,action.data)\r\n   \r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: UNLIKE_POST_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: UNLIKE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction loadPostsAPI(data) {\r\n    return axios.get('/posts', data)\r\n}\r\n\r\nfunction* loadPosts(action) {\r\n    try {\r\n\r\n        const result = yield call(loadPostsAPI,action.data)\r\n   \r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n// function loadPostAPI(data) {\r\n//     return axios.get('/post', data)\r\n// }\r\n\r\n// function* loadPost(action) {\r\n//     try {\r\n\r\n//         const result = yield call(loadPostAPI,action.data)\r\n   \r\n\r\n//         console.log(action.data+'data 뭐야 씨발')\r\n\r\n//         yield put({\r\n\r\n//             type: LOAD_POSTS_SUCCESS,\r\n//             data: result.data,\r\n\r\n//         });\r\n\r\n//     } catch (err) {\r\n\r\n//         yield put({\r\n\r\n//             type: LOAD_POSTS_FAILURE,\r\n//             data: err.response.data\r\n//         })\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', {content: data})\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n\r\n        const result = yield call(addPostAPI,action.data)\r\n        \r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n        yield put({\r\n            type: ADD_POST_TO_ME, \r\n            data:result.data.id\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME, \r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n        yield put({\r\n\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n\r\n        const result = yield call(addCommentAPI,action.data)\r\n  \r\n        console.log('코멘트')\r\n        console.log(result)\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchLikePost() {\r\n    yield takeLatest(LIKE_POST_REQUEST, likePost);\r\n}\r\nfunction* watchUnlikePost() {\r\n    yield takeLatest(UNLIKE_POST_REQUEST, unlikePost);\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\n// function* watchLoadPost() {\r\n//     yield throttle(5000,LOAD_POSTS_REQUEST, loadPost);\r\n// }\r\nfunction* watchLoadPosts() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPosts);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchLikePost),\r\n        fork(watchUnlikePost),\r\n\r\n        // fork(watchLoadPost),\r\n        fork(watchLoadPosts),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,EAACC,IAAI,QAAQ,oBAAoB;AACrF,SAAQC,iBAAiB,EAACC,mBAAmB,EAAEC,iBAAiB,EAACC,mBAAmB,EAACC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,iBAAiB,QAAQ,kBAAkB;AACzV,SAASC,cAAc,EAAEC,cAAc,EAAEC,cAAc,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,QAAQ,kBAAkB;AAE1K,SAASC,WAAW,CAACC,IAAI,EAAE;EACvB,OAAOjC,KAAK,CAACkC,GAAG,CAAC,QAAQ,EAAED,IAAI,CAAC;AACpC;AAEA,UAAUE,QAAQ,CAACC,MAAM,EAAE;EACvB,IAAI;IAEA,MAAMC,MAAM,GAAG,MAAM9B,IAAI,CAACyB,WAAW,EAACI,MAAM,CAACH,IAAI,CAAC;IAGlDK,OAAO,CAACC,GAAG,CAACH,MAAM,CAACH,IAAI,GAAC,YAAY,CAAC;IAErC,MAAM9B,GAAG,CAAC;MAENqC,IAAI,EAAElB,iBAAiB;MACvBW,IAAI,EAAEI,MAAM,CAACJ;IAEjB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOQ,GAAG,EAAE;IAEV,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAEjB,iBAAiB;MACvBU,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;AAGA,SAASU,aAAa,CAACV,IAAI,EAAE;EACzB,OAAOjC,KAAK,CAACkC,GAAG,CAAC,QAAQ,EAAED,IAAI,CAAC;AACpC;AAEA,UAAUW,UAAU,CAACR,MAAM,EAAE;EACzB,IAAI;IAEA,MAAMC,MAAM,GAAG,MAAM9B,IAAI,CAACoC,aAAa,EAACP,MAAM,CAACH,IAAI,CAAC;IAGpDK,OAAO,CAACC,GAAG,CAACH,MAAM,CAACH,IAAI,GAAC,YAAY,CAAC;IAErC,MAAM9B,GAAG,CAAC;MAENqC,IAAI,EAAEK,mBAAmB;MACzBZ,IAAI,EAAEI,MAAM,CAACJ;IAEjB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOQ,GAAG,EAAE;IAEV,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAEM,mBAAmB;MACzBb,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;AAGA,SAASc,YAAY,CAACd,IAAI,EAAE;EACxB,OAAOjC,KAAK,CAACkC,GAAG,CAAC,QAAQ,EAAED,IAAI,CAAC;AACpC;AAEA,UAAUe,SAAS,CAACZ,MAAM,EAAE;EACxB,IAAI;IAEA,MAAMC,MAAM,GAAG,MAAM9B,IAAI,CAACwC,YAAY,EAACX,MAAM,CAACH,IAAI,CAAC;IAGnDK,OAAO,CAACC,GAAG,CAACH,MAAM,CAACH,IAAI,GAAC,YAAY,CAAC;IAErC,MAAM9B,GAAG,CAAC;MAENqC,IAAI,EAAEpB,kBAAkB;MACxBa,IAAI,EAAEI,MAAM,CAACJ;IAEjB,CAAC,CAAC;EAEN,CAAC,CAAC,OAAOQ,GAAG,EAAE;IAEV,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAEnB,kBAAkB;MACxBY,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;;AAGA;AACA;AACA;;AAEA;AACA;;AAEA;;AAGA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAKA,SAASgB,UAAU,CAAChB,IAAI,EAAE;EACtB,OAAOjC,KAAK,CAACkD,IAAI,CAAC,OAAO,EAAE;IAACC,OAAO,EAAElB;EAAI,CAAC,CAAC;AAC/C;AAEA,UAAUmB,OAAO,CAAChB,MAAM,EAAE;EACtB,IAAI;IAEA,MAAMC,MAAM,GAAG,MAAM9B,IAAI,CAAC0C,UAAU,EAACb,MAAM,CAACH,IAAI,CAAC;IAEjDK,OAAO,CAACC,GAAG,CAACH,MAAM,CAACH,IAAI,CAAC;IACxB,MAAM9B,GAAG,CAAC;MAENqC,IAAI,EAAE5B,gBAAgB;MACtBqB,IAAI,EAAEI,MAAM,CAACJ;IAEjB,CAAC,CAAC;IAEF,MAAM9B,GAAG,CAAC;MACNqC,IAAI,EAAEhB,cAAc;MACpBS,IAAI,EAACI,MAAM,CAACJ,IAAI,CAACoB;IACrB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOZ,GAAG,EAAE;IAEV,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAE3B,gBAAgB;MACtBoB,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;AAIA,SAASqB,aAAa,CAACrB,IAAI,EAAE;EACzB,OAAOjC,KAAK,CAACuD,MAAM,CAAC,WAAW,EAAEtB,IAAI,CAAC;AAC1C;AAEA,UAAUuB,UAAU,CAACpB,MAAM,EAAE;EACzB,IAAI;IAEA;IACA,MAAMlC,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MAENqC,IAAI,EAAE7B,mBAAmB;MACzBsB,IAAI,EAAEG,MAAM,CAACH;IACjB,CAAC,CAAC;IAEF,MAAM9B,GAAG,CAAC;MACNqC,IAAI,EAAEZ,iBAAiB;MACvBK,IAAI,EAACG,MAAM,CAACH;IAChB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACVH,OAAO,CAACmB,KAAK,CAAChB,GAAG,CAAC;IAClB,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAEkB,mBAAmB;MACzBzB,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AACJ;AAIA,SAAS0B,aAAa,CAAC1B,IAAI,EAAE;EACzB,OAAOjC,KAAK,CAACkD,IAAI,CAAE,SAAQjB,IAAI,CAAC2B,MAAO,UAAS,EAAE3B,IAAI,CAAC;AAC3D;AAEA,UAAU4B,UAAU,CAACzB,MAAM,EAAE;EACzB,IAAI;IAEA,MAAMC,MAAM,GAAG,MAAM9B,IAAI,CAACoD,aAAa,EAACvB,MAAM,CAACH,IAAI,CAAC;IAEpDK,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClBD,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,MAAMlC,GAAG,CAAC;MAENqC,IAAI,EAAExB,mBAAmB;MACzBiB,IAAI,EAAEI,MAAM,CAACJ;IACjB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOQ,GAAG,EAAE;IAEV,MAAMtC,GAAG,CAAC;MAENqC,IAAI,EAAEvB,mBAAmB;MACzBgB,IAAI,EAAEQ,GAAG,CAACC,QAAQ,CAACT;IACvB,CAAC,CAAC;EACN;AAEJ;AAGA,UAAU6B,aAAa,GAAG;EACtB,MAAMzD,UAAU,CAACG,iBAAiB,EAAE2B,QAAQ,CAAC;AACjD;AACA,UAAU4B,eAAe,GAAG;EACxB,MAAM1D,UAAU,CAACI,mBAAmB,EAAEmC,UAAU,CAAC;AACrD;AAGA,UAAUoB,YAAY,GAAG;EACrB,MAAM3D,UAAU,CAACS,gBAAgB,EAAEsC,OAAO,CAAC;AAC/C;AACA;AACA;AACA;AACA,UAAUa,cAAc,GAAG;EACvB,MAAM3D,QAAQ,CAAC,IAAI,EAACa,kBAAkB,EAAE6B,SAAS,CAAC;AACtD;AACA,UAAUkB,eAAe,GAAG;EACxB,MAAM7D,UAAU,CAACa,mBAAmB,EAAEsC,UAAU,CAAC;AACrD;AAEA,UAAUW,eAAe,GAAG;EACxB,MAAM9D,UAAU,CAACU,mBAAmB,EAAE8C,UAAU,CAAC;AACrD;AAGA,eAAe,UAAUO,QAAQ,GAAG;EAChC,MAAMnE,GAAG,CAAC,CACNG,IAAI,CAAC4D,YAAY,CAAC,EAClB5D,IAAI,CAAC0D,aAAa,CAAC,EACnB1D,IAAI,CAAC2D,eAAe,CAAC;EAErB;EACA3D,IAAI,CAAC6D,cAAc,CAAC,EACpB7D,IAAI,CAAC8D,eAAe,CAAC,EACrB9D,IAAI,CAAC+D,eAAe,CAAC,CACxB,CAAC;AACN"},"metadata":{},"sourceType":"module"}