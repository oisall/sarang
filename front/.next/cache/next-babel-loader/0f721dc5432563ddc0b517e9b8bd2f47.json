{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, put, fork, takeLatest, throttle } from \"redux-saga/effects\";\nimport { generateDummyPost, REMOVE_POST_SUCCESS, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\nimport shortid from \"shortid\";\nimport { ADD_POST_TO_ME, FOLLOW_REQUEST, REMOVE_POST_OF_ME, UNFOLLOW_REQUEST } from '../reducers/user';\nfunction loadPostAPI(data) {\n  return axios.get('/api/post', data);\n}\nfunction* loadPost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    console.log(action.data + 'data 뭐야 씨발');\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: generateDummyPost(10)\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction* addPost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    const id = shortid.generate();\n    console.log(action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    // const result = yield call(addCommentAPI,action.data)\n    yield delay(1000);\n    console.log('코멘트 사가');\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\nfunction* follow(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    const id = shortid.generate();\n    console.log(action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: FOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction unfollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    const id = shortid.generate();\n    console.log(action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: {\n        content: action.data,\n        id\n      }\n    });\n  } catch (err) {\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchFollow), fork(watchUnfollow), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","delay","put","fork","takeLatest","throttle","generateDummyPost","REMOVE_POST_SUCCESS","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","shortid","ADD_POST_TO_ME","FOLLOW_REQUEST","REMOVE_POST_OF_ME","UNFOLLOW_REQUEST","loadPostAPI","data","get","loadPost","action","console","log","type","err","response","addPostAPI","post","addPost","id","generate","content","removePostAPI","delete","removePost","error","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","followAPI","follow","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","unfollow","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","watchFollow","watchUnfollow","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Dev/next_react_node/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, put, fork, takeLatest, throttle } from \"redux-saga/effects\";\r\nimport { generateDummyPost,REMOVE_POST_SUCCESS,ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\r\nimport shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME, FOLLOW_REQUEST, REMOVE_POST_OF_ME, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\n\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get('/api/post', data)\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: generateDummyPost(10),\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: ADD_POST_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n        yield put({\r\n            type: ADD_POST_TO_ME, data:id\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME, \r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n        yield put({\r\n\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n\r\n        // const result = yield call(addCommentAPI,action.data)\r\n        yield delay(1000);\r\n        console.log('코멘트 사가')\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: FOLLOW_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: FOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: UNFOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchLoadPost() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}