{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\components\\\\PostCard.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Card, Comment, List, Button, Popover, Avatar } from \"antd\";\nimport React, { useCallback, useState } from \"react\";\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport PropTypes from 'prop-types';\nimport PostImages from \"./PostImages\";\nimport CommentForm from \"./CommentForm\";\nimport PostCardContent from \"./PostCardContent\";\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\nimport FollowButton from \"./FollowButton\";\nvar PostCard = function PostCard(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    removePostLoading = _useSelector.removePostLoading;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useState = useState(false),\n    liked = _useState[0],\n    setLiked = _useState[1];\n  var _useState2 = useState(false),\n    commentFormOpened = _useState2[0],\n    setCommentFormOpened = _useState2[1];\n  var onToggleLike = useCallback(function () {\n    console.log(liked);\n    setLiked(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleCOmment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      images: post.Images,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }), liked ? __jsx(HeartTwoTone, {\n      twoToneColor: \"#eb2f96\",\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 27\n      }\n    }) : __jsx(HeartOutlined, {\n      key: \"heart\",\n      onClick: onToggleLike,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 27\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"commnet\",\n      onClick: onToggleCOmment,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 37\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        onClick: onRemovePost,\n        loading: removePostLoading,\n        type: \"danger\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 35\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }))],\n    extra: id && __jsx(FollowButton, {\n      post: post,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: __jsx(PostCardContent, {\n      postData: post.content,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 34\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  })), commentFormOpened && __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 20\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, __jsx(Comment, {\n        author: item.User,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }\n        }, item.User),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }\n  })));\n};\n_s(PostCard, \"NkMS9SwvvyItU6pu/eurZJXE9vc=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createAt: PropTypes.string,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\nvar _c;\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["Card","Comment","List","Button","Popover","Avatar","React","useCallback","useState","RetweetOutlined","MessageOutlined","HeartOutlined","EllipsisOutlined","HeartTwoTone","useDispatch","useSelector","PropTypes","PostImages","CommentForm","PostCardContent","REMOVE_POST_REQUEST","FollowButton","PostCard","post","dispatch","state","removePostLoading","id","user","me","liked","setLiked","commentFormOpened","setCommentFormOpened","onToggleLike","console","log","prev","onToggleCOmment","onRemovePost","type","data","marginTop","Images","User","nickname","content","Comments","length","item","propTypes","shape","number","object","string","createAt","arrayOf","isRequired"],"sources":["C:/Dev/next_react_node/front/components/PostCard.js"],"sourcesContent":["import { Card,Comment, List,Button, Popover, Avatar } from \"antd\";\r\nimport React, { useCallback, useState } from \"react\";\r\nimport { RetweetOutlined, MessageOutlined, HeartOutlined, EllipsisOutlined, HeartTwoTone } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport PropTypes from 'prop-types';\r\nimport PostImages from \"./PostImages\";\r\nimport CommentForm from \"./CommentForm\";\r\nimport PostCardContent from \"./PostCardContent\";\r\nimport { REMOVE_POST_REQUEST } from \"../reducers/post\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const {removePostLoading} = useSelector((state)=>state.post);\r\n    \r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const onToggleLike = useCallback(() => {\r\n        console.log(liked);\r\n        setLiked((prev) => !prev);\r\n    }, [])\r\n\r\n    const onToggleCOmment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev)\r\n    }, [])\r\n\r\nconst onRemovePost=useCallback(()=>{\r\n    dispatch({\r\n        type:REMOVE_POST_REQUEST,\r\n        data:post.id\r\n    })\r\n},[])\r\n\r\n    return (\r\n        <div style={{ marginTop: 10 }}>\r\n            <Card\r\n                cover={post.Images[0] && <PostImages images={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key='retweet' />,\r\n\r\n\r\n                    liked\r\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\r\n                        : <HeartOutlined key='heart'onClick={onToggleLike} />,\r\n\r\n                    <MessageOutlined key='commnet' onClick={onToggleCOmment} />,\r\n                    <Popover key='more' content={(\r\n                        <Button.Group>\r\n                            {id && post.User.id === id ?\r\n                                <>\r\n                                    <Button>수정</Button>\r\n                                    <Button \r\n                                    onClick={onRemovePost}\r\n                                    loading={removePostLoading}\r\n                                    type='danger'>삭제</Button>\r\n                                </>\r\n                                : <Button>신고</Button>}\r\n\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n                extra={id&&<FollowButton post={post}/>}\r\n            >\r\n                <Card.Meta\r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={<PostCardContent postData={post.content}/>} />\r\n            </Card>\r\n            {commentFormOpened && (\r\n                <div>\r\n                   <CommentForm post={post}/>\r\n                   <List\r\n                   header={`${post.Comments.length}개의 댓글`}\r\n                   itemLayout=\"horizontal\"\r\n                   dataSource={post.Comments}\r\n                   renderItem={(item)=>(\r\n                    <li>\r\n                        <Comment\r\n                        author={item.User}\r\n                        avatar={<Avatar>{item.User}</Avatar>}\r\n                        content={item.content}\r\n                        />\r\n                           \r\n                    </li>\r\n                   )}\r\n                   />\r\n\r\n                </div>)}\r\n            {/* <CommentForm/>\r\n    <Comments/> */}\r\n        </div >\r\n    )\r\n\r\n}\r\n\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createAt: PropTypes.string,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object)\r\n    }).isRequired\r\n}\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}