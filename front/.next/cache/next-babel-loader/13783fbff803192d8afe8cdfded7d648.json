{"ast":null,"code":"import axios from \"axios\";\nimport { all, delay, put, fork, takeLatest, throttle, call } from \"redux-saga/effects\";\nimport { generateDummyPost, REMOVE_POST_SUCCESS, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\nimport shortid from \"shortid\";\nimport { ADD_POST_TO_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, REMOVE_POST_OF_ME, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\nfunction loadPostAPI(data) {\n  return axios.get('/post', data);\n}\nfunction* loadPost(action) {\n  try {\n    const result = yield call(loadPostAPI, action.data);\n    console.log(action.data + 'data 뭐야 씨발');\n    yield put({\n      type: LOAD_POSTS_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_POSTS_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addPostAPI(data) {\n  return axios.post('/post', {\n    content: data\n  });\n}\nfunction* addPost(action) {\n  try {\n    const result = yield call(addPostAPI, action.data);\n    console.log(action.data);\n    yield put({\n      type: ADD_POST_SUCCESS,\n      data: result.data\n    });\n    yield put({\n      type: ADD_POST_TO_ME,\n      data: result.data.id\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction removePostAPI(data) {\n  return axios.delete('/api/post', data);\n}\nfunction* removePost(action) {\n  try {\n    // const result = yield call(addPostAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: REMOVE_POST_SUCCESS,\n      data: action.data\n    });\n    yield put({\n      type: REMOVE_POST_OF_ME,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: REMOVE_POST_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction addCommentAPI(data) {\n  return axios.post(`/api/post/${data.postId}/comment`, data);\n}\nfunction* addComment(action) {\n  try {\n    const result = yield call(addCommentAPI, action.data);\n    console.log('코멘트 사가');\n    yield put({\n      type: ADD_COMMENT_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: ADD_COMMENT_FAILURE,\n      data: err.response.data\n    });\n  }\n}\nfunction* watchAddPost() {\n  yield takeLatest(ADD_POST_REQUEST, addPost);\n}\nfunction* watchLoadPost() {\n  yield throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n}\nfunction* watchRemovePost() {\n  yield takeLatest(REMOVE_POST_REQUEST, removePost);\n}\nfunction* watchAddComment() {\n  yield takeLatest(ADD_COMMENT_REQUEST, addComment);\n}\nexport default function* postSaga() {\n  yield all([fork(watchAddPost), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n}","map":{"version":3,"names":["axios","all","delay","put","fork","takeLatest","throttle","call","generateDummyPost","REMOVE_POST_SUCCESS","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","shortid","ADD_POST_TO_ME","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","REMOVE_POST_OF_ME","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","loadPostAPI","data","get","loadPost","action","result","console","log","type","err","response","addPostAPI","post","content","addPost","id","removePostAPI","delete","removePost","error","REMOVE_POST_FAILURE","addCommentAPI","postId","addComment","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","postSaga"],"sources":["C:/Dev/next_react_node/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, put, fork, takeLatest, throttle,call } from \"redux-saga/effects\";\r\nimport { generateDummyPost,REMOVE_POST_SUCCESS,ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\r\nimport shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME, FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, REMOVE_POST_OF_ME, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS } from '../reducers/user';\r\n\r\n\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get('/post', data)\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n\r\n        const result = yield call(loadPostAPI,action.data)\r\n   \r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/post', {content: data})\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n\r\n        const result = yield call(addPostAPI,action.data)\r\n        \r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: ADD_POST_SUCCESS,\r\n            data: result.data,\r\n\r\n        });\r\n\r\n        yield put({\r\n            type: ADD_POST_TO_ME, \r\n            data:result.data.id\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME, \r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n        yield put({\r\n\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n\r\n        const result = yield call(addCommentAPI,action.data)\r\n  \r\n        console.log('코멘트 사가')\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: result.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchLoadPost() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}