{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    addCommentDone = _useSelector.addCommentDone,\n    addCommentLoading = _useSelector.addCommentLoading;\n  // const [commentText,onChnageCommentText] = useInput('');\n  var _useState = useState(''),\n    commentText = _useState[0],\n    setCommentText = _useState[1];\n  var onChnageCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment\n  }, __jsx(Form.Item, null, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChnageCommentText,\n    rows: 4\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    loading: addCommentLoading,\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Form","Button","Input","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","setCommentText","onChnageCommentText","e","target","value","onSubmitComment","type","data","content","postId","userId","position","right","bottom","zIndex","prototype","object","isRequired"],"sources":["C:/Dev/next_react_node/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, Input } from \"antd\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone,addCommentLoading} = useSelector((state) => state.post);\r\n    // const [commentText,onChnageCommentText] = useInput('');\r\n    const [commentText, setCommentText] = useState('');\r\n\r\n    const onChnageCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n     \r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id }\r\n        })\r\n\r\n    }, [commentText, id])\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea\r\n                    value={commentText}\r\n                    onChange={onChnageCommentText}\r\n                    rows={4}\r\n                />\r\n                <Button \r\n                \r\n                style={{position:'absolute',right:0,bottom:-40,zIndex:1}}\r\n                loading={addCommentLoading}\r\n                type='primary' htmlType='submit'>삐약</Button>\r\n\r\n\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.prototype = {\r\n    post: PropTypes.object.isRequired\r\n}\r\nexport default CommentForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,IAAMC,WAAW,GAAG,SAAdA,WAAW,OAAiB;EAAA,IAAXC,IAAI,QAAJA,IAAI;EACvB,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,IAAMM,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,mBAA2CL,WAAW,CAAC,UAACM,KAAK;MAAA,OAAKA,KAAK,CAACH,IAAI;IAAA,EAAC;IAAtEM,cAAc,gBAAdA,cAAc;IAACC,iBAAiB,gBAAjBA,iBAAiB;EACvC;EACA,gBAAsChB,QAAQ,CAAC,EAAE,CAAC;IAA3CiB,WAAW;IAAEC,cAAc;EAElC,IAAMC,mBAAmB,GAAGrB,WAAW,CAAC,UAACsB,CAAC,EAAK;IAC3CF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,YAAI;IAEV,IAAGgB,cAAc,EAAC;MACdG,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAC,CAACH,cAAc,CAAC,CAAC;EAEnB,IAAMQ,eAAe,GAAGzB,WAAW,CAAC,YAAM;IAEtCY,QAAQ,CAAC;MACLc,IAAI,EAAEjB,mBAAmB;MACzBkB,IAAI,EAAE;QAAEC,OAAO,EAAET,WAAW;QAAEU,MAAM,EAAElB,IAAI,CAACE,EAAE;QAAEiB,MAAM,EAAEjB;MAAG;IAC9D,CAAC,CAAC;EAEN,CAAC,EAAE,CAACM,WAAW,EAAEN,EAAE,CAAC,CAAC;EAErB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEY;EAAgB,GAC5B,MAAC,IAAI,CAAC,IAAI,QACN,MAAC,KAAK,CAAC,QAAQ;IACX,KAAK,EAAEN,WAAY;IACnB,QAAQ,EAAEE,mBAAoB;IAC9B,IAAI,EAAE;EAAE,EACV,EACF,MAAC,MAAM;IAEP,KAAK,EAAE;MAACU,QAAQ,EAAC,UAAU;MAACC,KAAK,EAAC,CAAC;MAACC,MAAM,EAAC,CAAC,EAAE;MAACC,MAAM,EAAC;IAAC,CAAE;IACzD,OAAO,EAAEhB,iBAAkB;IAC3B,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC;EAAQ,kBAAY,CAGpC,CACT;AAEf,CAAC;AAEDR,WAAW,CAACyB,SAAS,GAAG;EACpBxB,IAAI,EAAER,SAAS,CAACiC,MAAM,CAACC;AAC3B,CAAC;AACD,eAAe3B,WAAW"},"metadata":{},"sourceType":"module"}