{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  // const [commentText,onChnageCommentText] = useInput('');\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const onChnageCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChnageCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["React","useCallback","useEffect","useState","PropTypes","Form","Button","Input","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","setCommentText","onChnageCommentText","e","target","value","onSubmitComment","type","data","content","postId","userId","prototype","object","isRequired"],"sources":["C:/Dev/next_react_node/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useEffect, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Button, Input } from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const {addCommentDone} = useSelector((state) => state.post);\r\n    // const [commentText,onChnageCommentText] = useInput('');\r\n    const [commentText, setCommentText] = useState('');\r\n    const onChnageCommentText = useCallback((e) => {\r\n        setCommentText(e.target.value)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n\r\n        if(addCommentDone){\r\n            setCommentText('');\r\n        }\r\n    },[addCommentDone])\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n     \r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id }\r\n        })\r\n\r\n    }, [commentText, id])\r\n\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea\r\n                    value={commentText}\r\n                    onChange={onChnageCommentText}\r\n                    rows={4}\r\n                />\r\n                <Button type='primary' htmlType='submit'>삐약</Button>\r\n\r\n\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.prototype = {\r\n    post: PropTypes.object.isRequired\r\n}\r\nexport default CommentForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC/D,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAAEC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC9B,MAAMC,QAAQ,GAAGL,WAAW,EAAE;EAC9B,MAAMM,EAAE,GAAGL,WAAW,CAAEM,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,MAAM;IAACI;EAAc,CAAC,GAAGT,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EAC3D;EACA,MAAM;IAAA,GAACO,WAAW;IAAA,GAAEC;EAAc,IAAIlB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMmB,mBAAmB,GAAGrB,WAAW,CAAEsB,CAAC,IAAK;IAC3CF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC,EAAE,EAAE,CAAC;EAENvB,SAAS,CAAC,MAAI;IAEV,IAAGiB,cAAc,EAAC;MACdE,cAAc,CAAC,EAAE,CAAC;IACtB;EACJ,CAAC,EAAC,CAACF,cAAc,CAAC,CAAC;EAEnB,MAAMO,eAAe,GAAGzB,WAAW,CAAC,MAAM;IAEtCa,QAAQ,CAAC;MACLa,IAAI,EAAEhB,mBAAmB;MACzBiB,IAAI,EAAE;QAAEC,OAAO,EAAET,WAAW;QAAEU,MAAM,EAAEjB,IAAI,CAACE,EAAE;QAAEgB,MAAM,EAAEhB;MAAG;IAC9D,CAAC,CAAC;EAEN,CAAC,EAAE,CAACK,WAAW,EAAEL,EAAE,CAAC,CAAC;EAErB,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEW,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,KAAK,CAAC,QAAQ;IACX,KAAK,EAAEN,WAAY;IACnB,QAAQ,EAAEE,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACV,EACF,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAG5C,CACT;AAEf,CAAC;AAEDV,WAAW,CAACoB,SAAS,GAAG;EACpBnB,IAAI,EAAET,SAAS,CAAC6B,MAAM,CAACC;AAC3B,CAAC;AACD,eAAetB,WAAW"},"metadata":{},"sourceType":"module"}