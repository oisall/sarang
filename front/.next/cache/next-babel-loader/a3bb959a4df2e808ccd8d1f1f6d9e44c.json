{"ast":null,"code":"import axios from \"axios\";\nimport { all, fork, takeLatest, delay, put } from \"redux-saga/effects\";\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\nfunction* logIn(action) {\n  try {\n    console.log('saga login');\n    // const result = yield call(logInAPI,action.data)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_IN_SUCCESS',\n      // data: result.data\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(1000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n      // data: result.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      error: err.response.data\n    });\n  }\n}\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"names":["axios","all","fork","takeLatest","delay","put","logInAPI","data","post","logIn","action","console","log","type","err","response","logOutAPI","logOut","error","watchLogIn","watchLogOut","userSaga"],"sources":["C:/Dev/next_react_node/front/sagas/user.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all ,fork,takeLatest,delay,put} from \"redux-saga/effects\";\r\n\r\n\r\n\r\n\r\nfunction logInAPI(data) {\r\n    return axios.post('/api/login',data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n    try {\r\n        console.log('saga login')\r\n        // const result = yield call(logInAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: 'LOG_IN_SUCCESS',\r\n            // data: result.data\r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: 'LOG_IN_FAILURE',\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction logOutAPI() {\r\n    return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n    try {\r\n\r\n        // const result = yield call(logOutAPI)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: 'LOG_OUT_SUCCESS',\r\n            // data: result.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: 'LOG_OUT_FAILURE',\r\n            error: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\nfunction* watchLogIn() {\r\n    yield takeLatest('LOG_IN_REQUEST', logIn);\r\n}\r\n\r\nfunction* watchLogOut() {\r\n    yield takeLatest('LOG_OUT_REQUEST',logOut);\r\n}\r\n\r\n\r\nexport default function* userSaga(){\r\n    yield all([\r\n        fork(watchLogIn),\r\n        fork(watchLogOut),\r\n    ])\r\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,IAAI,EAACC,UAAU,EAACC,KAAK,EAACC,GAAG,QAAO,oBAAoB;AAKlE,SAASC,QAAQ,CAACC,IAAI,EAAE;EACpB,OAAOP,KAAK,CAACQ,IAAI,CAAC,YAAY,EAACD,IAAI,CAAC;AACxC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACpB,IAAI;IACAC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB;IACA,MAAMR,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MAENQ,IAAI,EAAE,gBAAgB;MACtB;MACAN,IAAI,EAACG,MAAM,CAACH;IAChB,CAAC,CAAC;EACN,CAAC,CAAC,OAAOO,GAAG,EAAE;IAEV,MAAMT,GAAG,CAAC;MAENQ,IAAI,EAAE,gBAAgB;MACtBN,IAAI,EAAEO,GAAG,CAACC,QAAQ,CAACR;IACvB,CAAC,CAAC;EACN;AAEJ;AAGA,SAASS,SAAS,GAAG;EACjB,OAAOhB,KAAK,CAACQ,IAAI,CAAC,aAAa,CAAC;AACpC;AAEA,UAAUS,MAAM,GAAG;EACf,IAAI;IAEA;IACA,MAAMb,KAAK,CAAC,IAAI,CAAC;IACjB,MAAMC,GAAG,CAAC;MAENQ,IAAI,EAAE;MACN;IACJ,CAAC,CAAC;EACN,CAAC,CAAC,OAAOC,GAAG,EAAE;IAEV,MAAMT,GAAG,CAAC;MAENQ,IAAI,EAAE,iBAAiB;MACvBK,KAAK,EAAEJ,GAAG,CAACC,QAAQ,CAACR;IACxB,CAAC,CAAC;EACN;AAEJ;AAEA,UAAUY,UAAU,GAAG;EACnB,MAAMhB,UAAU,CAAC,gBAAgB,EAAEM,KAAK,CAAC;AAC7C;AAEA,UAAUW,WAAW,GAAG;EACpB,MAAMjB,UAAU,CAAC,iBAAiB,EAACc,MAAM,CAAC;AAC9C;AAGA,eAAe,UAAUI,QAAQ,GAAE;EAC/B,MAAMpB,GAAG,CAAC,CACNC,IAAI,CAACiB,UAAU,CAAC,EAChBjB,IAAI,CAACkB,WAAW,CAAC,CACpB,CAAC;AACN"},"metadata":{},"sourceType":"module"}