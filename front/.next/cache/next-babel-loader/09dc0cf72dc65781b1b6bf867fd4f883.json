{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AppLayout from \"../components/AppLayout\";\nimport PostCard from \"../components/PostCard\";\nimport PostForm from \"../components/PostForm\";\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\nimport { LOAD_USER_REQUEST } from \"../reducers/user\";\nconst Home = () => {\n  const dispatch = useDispatch();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  useEffect(() => {\n    dispatch({\n      type: LOAD_USER_REQUEST\n    });\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n      if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n        if (hasMorePost && !loadPostsLoading) {\n          dispatch({\n            type: LOAD_POSTS_REQUEST\n          });\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMorePost, loadPostsLoading]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 38\n    }\n  })));\n};\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostCard","PostForm","LOAD_POSTS_REQUEST","LOAD_USER_REQUEST","Home","dispatch","me","state","user","mainPosts","hasMorePost","loadPostsLoading","post","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","map","id"],"sources":["C:/Dev/next_react_node/front/pages/index.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport AppLayout from \"../components/AppLayout\";\r\nimport PostCard from \"../components/PostCard\";\r\nimport PostForm from \"../components/PostForm\";\r\nimport { LOAD_POSTS_REQUEST } from \"../reducers/post\";\r\nimport {LOAD_USER_REQUEST} from \"../reducers/user\"\r\n\r\nconst Home = () => {\r\n    const dispatch = useDispatch();\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts, hasMorePost,loadPostsLoading } = useSelector((state) => state.post);\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n            type:LOAD_USER_REQUEST,\r\n        })\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST\r\n        });\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight)\r\n            if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight-300) {\r\n                if (hasMorePost && !loadPostsLoading) {\r\n\r\n                    dispatch({\r\n                        type: LOAD_POSTS_REQUEST\r\n                    })\r\n                }\r\n            }\r\n        }\r\n        window.addEventListener('scroll', onScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll)\r\n        }\r\n    }, [hasMorePost,loadPostsLoading])\r\n\r\n\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Home;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AACrD,SAAQC,iBAAiB,QAAO,kBAAkB;AAElD,MAAMC,IAAI,GAAG,MAAM;EACf,MAAMC,QAAQ,GAAGR,WAAW,EAAE;EAC9B,MAAM;IAAES;EAAG,CAAC,GAAGR,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACjD,MAAM;IAAEC,SAAS;IAAEC,WAAW;IAACC;EAAiB,CAAC,GAAGb,WAAW,CAAES,KAAK,IAAKA,KAAK,CAACK,IAAI,CAAC;EAEtFhB,SAAS,CAAC,MAAM;IACZS,QAAQ,CAAC;MACLQ,IAAI,EAACV;IACT,CAAC,CAAC;IACFE,QAAQ,CAAC;MACLQ,IAAI,EAAEX;IACV,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAINN,SAAS,CAAC,MAAM;IACZ,SAASkB,QAAQ,GAAG;MAChBC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAACC,eAAe,CAACC,YAAY,EAAEF,QAAQ,CAACC,eAAe,CAACE,YAAY,CAAC;MACzG,IAAIL,MAAM,CAACC,OAAO,GAAGC,QAAQ,CAACC,eAAe,CAACC,YAAY,GAAGF,QAAQ,CAACC,eAAe,CAACE,YAAY,GAAC,GAAG,EAAE;QACpG,IAAIZ,WAAW,IAAI,CAACC,gBAAgB,EAAE;UAElCN,QAAQ,CAAC;YACLQ,IAAI,EAAEX;UACV,CAAC,CAAC;QACN;MACJ;IACJ;IACAe,MAAM,CAACM,gBAAgB,CAAC,QAAQ,EAAET,QAAQ,CAAC;IAE3C,OAAO,MAAM;MACTG,MAAM,CAACO,mBAAmB,CAAC,QAAQ,EAAEV,QAAQ,CAAC;IAClD,CAAC;EACL,CAAC,EAAE,CAACJ,WAAW,EAACC,gBAAgB,CAAC,CAAC;EAGlC,OACI,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACLL,EAAE,IAAI,MAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAClBG,SAAS,CAACgB,GAAG,CAAEb,IAAI,IAAK,MAAC,QAAQ;IAAC,GAAG,EAAEA,IAAI,CAACc,EAAG;IAAC,IAAI,EAAEd,IAAK;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAAC,CACxD;AAGpB,CAAC;AAOD,eAAeR,IAAI"},"metadata":{},"sourceType":"module"}