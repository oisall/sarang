{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\components\\\\PostForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from 'antd';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addPost, UPLOAD_IMAGES_REQUEST } from '../reducers/post';\nvar PostForm = function PostForm() {\n  _s();\n  var _useState = useState(''),\n    text = _useState[0],\n    setText = _useState[1];\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    imagePaths = _useSelector.imagePaths,\n    addPostDone = _useSelector.addPostDone;\n  var imageInput = useRef();\n  useEffect(function () {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  });\n  var onSubmit = useCallback(function () {\n    dispatch(addPost(text));\n  }, [text]);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onChangeImages = useCallback(function (e) {\n    console.log('images', e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      \"float\": 'right'\n    },\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, imagePaths.map(function (v) {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: 'inline-block'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: '200px'\n      },\n      alt: v,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }), __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, __jsx(Button, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\n_s(PostForm, \"LxFcEK1ISfclJ1LGogl3C7yV8YQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = PostForm;\nexport default PostForm;\nvar _c;\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Form","Input","Button","React","useCallback","useEffect","useRef","useState","useDispatch","useSelector","addPost","UPLOAD_IMAGES_REQUEST","PostForm","text","setText","dispatch","state","post","imagePaths","addPostDone","imageInput","onChangeText","e","target","value","onSubmit","onClickImageUpload","current","click","onChangeImages","console","log","files","imageFormData","FormData","forEach","call","f","append","type","data","margin","map","v","display","width"],"sources":["C:/Dev/next_react_node/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button } from 'antd';\r\nimport  React,{ useCallback, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addPost,UPLOAD_IMAGES_REQUEST } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const [text,setText] = useState('');\r\n    const dispatch = useDispatch();\r\n    const { imagePaths,addPostDone } = useSelector((state) => state.post);\r\n    const imageInput = useRef();\r\n    useEffect(()=>{\r\n\r\n        if(addPostDone){\r\n            setText('');\r\n        }\r\n    },[addPostDone])\r\n\r\n\r\n\r\n    const onChangeText =useCallback((e)=>{\r\n        setText(e.target.value);\r\n    })\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text))\r\n       \r\n    }, [text]);\r\n\r\n    const onClickImageUpload=useCallback(()=>{\r\nimageInput.current.click();\r\n    },[imageInput.current])\r\n\r\nconst onChangeImages = useCallback((e)=>{\r\n    console.log('images',e.target.files);\r\n    const imageFormData = new FormData();\r\n    [].forEach.call(e.target.files,(f)=>{\r\n        imageFormData.append('image',f);\r\n    });\r\n    dispatch({\r\n        type:UPLOAD_IMAGES_REQUEST,\r\n        data:imageFormData\r\n    })\r\n})\r\n\r\n    return (\r\n        <Form style={{ margin: '10px 0 20px' }} encType=\"multipart/form-data\" onFinish={onSubmit}>\r\n            <Input.TextArea\r\n                value={text}\r\n                onChange={onChangeText}\r\n                maxLength={140}\r\n                placeholder='어떤 신기한 일이 있었나요?'\r\n            />\r\n            <div>\r\n                <input type='file' name='image' multiple hidden ref={imageInput} onChange={onChangeImages} />\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type='primary' style={{ float: 'right' }} htmlType='submit'>짹짹</Button>\r\n\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{ display: 'inline-block' }}>\r\n                        <img src={`http://localhost:3065/${v}`} style={{ width: '200px' }} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}