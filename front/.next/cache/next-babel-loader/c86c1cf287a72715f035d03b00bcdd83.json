{"ast":null,"code":"import shortid from \"shortid\";\nimport { ADD_POST_TO_ME } from \"./user\";\nimport produce from 'immer';\nimport faker from 'faker';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: 'YJ'\n    },\n    content: '더미 데이터 #해시캐그 #익스프레스',\n    Images: [{\n      id: shortid.generate(),\n      src: 'https://i.ibb.co/DRpgMzr/FW6-Qq5qa-AAAu-Ba3.jpg'\n    }, {\n      id: shortid.generate(),\n      src: 'https://i.ibb.co/mBGKCRz/8ca3972b-de1f-43c8-90d9-f82c09f8dcee.jpg'\n    }, {\n      id: shortid.generate(),\n      src: 'https://i.ibb.co/mBGKCRz/8ca3972b-de1f-43c8-90d9-f82c09f8dcee.jpg'\n    }],\n    Comments: [{\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: 'superman'\n      },\n      content: 'i wanna be'\n    }, {\n      id: shortid.generate(),\n      User: {\n        id: shortid.generate(),\n        nickname: 'IRONMAN'\n      },\n      content: 'electorics'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  removePostLoading: false,\n  removePostDone: false,\n  removePostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\nconst dummyPost = data => ({\n  id: data.id,\n  content: data.content,\n  User: {\n    id: 1,\n    nickname: 'YJ22'\n  },\n  Images: [],\n  Comments: []\n});\nconst dummyComment = data => ({\n  id: shortid.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: 'YJ22'\n  }\n});\nconst reducer = (state = initialState, action) => {\n  return produce(state, draft => {\n    switch (action.type) {\n      case ADD_POST_REQUEST:\n        draft.addPostLoading = true;\n        draft.addPostDone = false;\n        draft.addPostError = null;\n        break;\n      case ADD_POST_SUCCESS:\n        draft.mainPosts.unshift(dummyPost(action.data));\n        draft.addPostLoading = false;\n        draft.addPostDone = true;\n        break;\n      case ADD_POST_FAILURE:\n        draft.addPostLoading = false;\n        draft.addPostError = action.error;\n        break;\n      case REMOVE_POST_REQUEST:\n        draft.removePostLoading = true;\n        draft.removePostDone = false;\n        draft.removePostError = null;\n        break;\n      case REMOVE_POST_SUCCESS:\n        draft.mainPosts = draft.mainPosts.filter(v => v.id !== action.data);\n        draft.removePostLoading = false;\n        draft.removePostDone = true;\n        break;\n      case REMOVE_POST_FAILURE:\n        draft.removePostLoading = false;\n        draft.removePostError = action.error;\n        break;\n      case ADD_COMMENT_REQUEST:\n        draft.addCommentLoading = true;\n        draft.addCommentDone = false;\n        draft.addCommentError = null;\n        break;\n      case ADD_COMMENT_SUCCESS:\n        {\n          const post = draft.mainPosts.find(v => v.id === action.data.postId);\n          post.Comments.unshift(dummyComment(action.data.content));\n          draft.addCommentLoading = false;\n          draft.addCommentDone = true;\n          break;\n        }\n      case ADD_COMMENT_FAILURE:\n        draft.addCommentLoading = false;\n        draft.addCommentError = action.error;\n        break;\n      default:\n        break;\n    }\n  });\n};\nexport default reducer;","map":{"version":3,"names":["shortid","ADD_POST_TO_ME","produce","faker","initialState","mainPosts","id","User","nickname","content","Images","generate","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","removePostLoading","removePostDone","removePostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","dummyComment","reducer","state","action","draft","unshift","error","filter","v","post","find","postId"],"sources":["C:/Dev/next_react_node/front/reducers/post.js"],"sourcesContent":["import shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME } from \"./user\";\r\nimport produce from 'immer';\r\nimport faker from 'faker';\r\n\r\nexport const initialState = {\r\n\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: 'YJ',\r\n        },\r\n        content: '더미 데이터 #해시캐그 #익스프레스',\r\n        Images: [\r\n            {\r\n                id: shortid.generate(),\r\n                src: 'https://i.ibb.co/DRpgMzr/FW6-Qq5qa-AAAu-Ba3.jpg'\r\n            },\r\n            {\r\n                id: shortid.generate(),\r\n                src: 'https://i.ibb.co/mBGKCRz/8ca3972b-de1f-43c8-90d9-f82c09f8dcee.jpg'\r\n            }, {\r\n                id: shortid.generate(),\r\n                src: 'https://i.ibb.co/mBGKCRz/8ca3972b-de1f-43c8-90d9-f82c09f8dcee.jpg'\r\n            },\r\n        ],\r\n        Comments: [\r\n            {\r\n                id: shortid.generate(),\r\n                User: {\r\n                    id: shortid.generate(),\r\n                    nickname: 'superman',\r\n                },\r\n                content: 'i wanna be',\r\n            },\r\n            {\r\n                id: shortid.generate(),\r\n                User: {\r\n                    id: shortid.generate(),\r\n                    nickname: 'IRONMAN',\r\n                },\r\n                content: 'electorics',\r\n            }],\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n\r\n    removePostLoading: false,\r\n    removePostDone: false,\r\n    removePostError: null,\r\n\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n\r\n}\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\n\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data\r\n})\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data\r\n})\r\n\r\nconst dummyPost = (data) => ({\r\n    id: data.id,\r\n    content: data.content,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'YJ22'\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n})\r\n\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortid.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: 'YJ22'\r\n    },\r\n\r\n})\r\n\r\nconst reducer = (state = initialState, action) => {\r\n\r\n    return produce(state,(draft)=>{\r\n        switch (action.type) {\r\n            case ADD_POST_REQUEST:\r\n                draft.addPostLoading = true;\r\n                draft.addPostDone= false;\r\n                draft.addPostError= null;\r\n                break;\r\n\r\n              \r\n            case ADD_POST_SUCCESS:\r\n          \r\n                \r\n                draft.mainPosts.unshift(dummyPost(action.data));\r\n                draft.addPostLoading= false;\r\n                draft.addPostDone= true;\r\n                break;\r\n          \r\n    \r\n            case ADD_POST_FAILURE:\r\n                \r\n                 \r\n                    draft.addPostLoading= false;\r\n                    draft.addPostError= action.error;\r\n                    break;\r\n    \r\n    \r\n            case REMOVE_POST_REQUEST:\r\n               \r\n               \r\n                    draft.removePostLoading= true;\r\n                    draft.removePostDone= false;\r\n                    draft.removePostError= null;\r\n                    break;\r\n            case REMOVE_POST_SUCCESS:\r\n              \r\n                   \r\n                    draft.mainPosts= draft.mainPosts.filter((v)=>v.id !== action.data);\r\n                    draft.removePostLoading= false;\r\n                    draft.removePostDone= true;\r\n                    break;\r\n    \r\n            case REMOVE_POST_FAILURE:\r\n              \r\n                    draft.removePostLoading= false;\r\n                    draft.removePostError= action.error;\r\n                    break;\r\n            case ADD_COMMENT_REQUEST:\r\n              \r\n                    draft.addCommentLoading= true;\r\n                    draft.addCommentDone= false;\r\n                    draft.addCommentError= null;\r\n                    break;\r\n            case ADD_COMMENT_SUCCESS: {\r\n\r\n                const post =draft.mainPosts.find((v)=>v.id===action.data.postId);\r\n                post.Comments.unshift(dummyComment(action.data.content));\r\n                draft.addCommentLoading= false;\r\n                draft.addCommentDone= true;\r\n                break;\r\n            }\r\n            case ADD_COMMENT_FAILURE:\r\n             \r\n                    draft.addCommentLoading= false;\r\n                    draft.addCommentError= action.error;\r\n                    break;\r\n    \r\n    \r\n            default:\r\n                break;\r\n        }\r\n    })\r\n\r\n  \r\n};\r\n\r\n\r\n\r\nexport default reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}