{"ast":null,"code":"function _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(loadPost),\n  _marked2 = /*#__PURE__*/_regeneratorRuntime().mark(addPost),\n  _marked3 = /*#__PURE__*/_regeneratorRuntime().mark(removePost),\n  _marked4 = /*#__PURE__*/_regeneratorRuntime().mark(addComment),\n  _marked5 = /*#__PURE__*/_regeneratorRuntime().mark(follow),\n  _marked6 = /*#__PURE__*/_regeneratorRuntime().mark(unfollow),\n  _marked7 = /*#__PURE__*/_regeneratorRuntime().mark(watchFollow),\n  _marked8 = /*#__PURE__*/_regeneratorRuntime().mark(watchUnfollow),\n  _marked9 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddPost),\n  _marked10 = /*#__PURE__*/_regeneratorRuntime().mark(watchLoadPost),\n  _marked11 = /*#__PURE__*/_regeneratorRuntime().mark(watchRemovePost),\n  _marked12 = /*#__PURE__*/_regeneratorRuntime().mark(watchAddComment),\n  _marked13 = /*#__PURE__*/_regeneratorRuntime().mark(postSaga);\nimport axios from \"axios\";\nimport { all, delay, put, fork, takeLatest, throttle } from \"redux-saga/effects\";\nimport { generateDummyPost, REMOVE_POST_SUCCESS, ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\nimport shortid from \"shortid\";\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\nfunction loadPostAPI(data) {\n  return axios.get('/api/post', data);\n}\nfunction loadPost(action) {\n  return _regeneratorRuntime().wrap(function loadPost$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return delay(1000);\n        case 3:\n          console.log(action.data + 'data 뭐야 씨발');\n          _context.next = 6;\n          return put({\n            type: LOAD_POSTS_SUCCESS,\n            data: generateDummyPost(10)\n          });\n        case 6:\n          _context.next = 12;\n          break;\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          _context.next = 12;\n          return put({\n            type: LOAD_POSTS_FAILURE,\n            data: _context.t0.response.data\n          });\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 8]]);\n}\nfunction addPostAPI(data) {\n  return axios.post('/api/post', data);\n}\nfunction addPost(action) {\n  var id;\n  return _regeneratorRuntime().wrap(function addPost$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return delay(1000);\n        case 3:\n          id = shortid.generate();\n          console.log(action.data);\n          _context2.next = 7;\n          return put({\n            type: ADD_POST_SUCCESS,\n            data: {\n              content: action.data,\n              id: id\n            }\n          });\n        case 7:\n          _context2.next = 9;\n          return put({\n            type: ADD_POST_TO_ME,\n            data: id\n          });\n        case 9:\n          _context2.next = 15;\n          break;\n        case 11:\n          _context2.prev = 11;\n          _context2.t0 = _context2[\"catch\"](0);\n          _context2.next = 15;\n          return put({\n            type: ADD_POST_FAILURE,\n            data: _context2.t0.response.data\n          });\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 11]]);\n}\nfunction removePostAPI(data) {\n  return axios[\"delete\"]('/api/post', data);\n}\nfunction removePost(action) {\n  return _regeneratorRuntime().wrap(function removePost$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return delay(1000);\n        case 3:\n          _context3.next = 5;\n          return put({\n            type: REMOVE_POST_SUCCESS,\n            data: action.data\n          });\n        case 5:\n          _context3.next = 7;\n          return put({\n            type: REMOVE_POST_OF_ME,\n            data: action.data\n          });\n        case 7:\n          _context3.next = 14;\n          break;\n        case 9:\n          _context3.prev = 9;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.error(_context3.t0);\n          _context3.next = 14;\n          return put({\n            type: REMOVE_POST_FAILURE,\n            data: _context3.t0.response.data\n          });\n        case 14:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 9]]);\n}\nfunction addCommentAPI(data) {\n  return axios.post(\"/api/post/\".concat(data.postId, \"/comment\"), data);\n}\nfunction addComment(action) {\n  return _regeneratorRuntime().wrap(function addComment$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.prev = 0;\n          _context4.next = 3;\n          return delay(1000);\n        case 3:\n          console.log('코멘트 사가');\n          _context4.next = 6;\n          return put({\n            type: ADD_COMMENT_SUCCESS,\n            data: action.data\n          });\n        case 6:\n          _context4.next = 12;\n          break;\n        case 8:\n          _context4.prev = 8;\n          _context4.t0 = _context4[\"catch\"](0);\n          _context4.next = 12;\n          return put({\n            type: ADD_COMMENT_FAILURE,\n            data: _context4.t0.response.data\n          });\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4, null, [[0, 8]]);\n}\nfunction followAPI(data) {\n  return axios.post('/api/follow', data);\n}\nfunction follow(action) {\n  var id;\n  return _regeneratorRuntime().wrap(function follow$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.prev = 0;\n          _context5.next = 3;\n          return delay(1000);\n        case 3:\n          id = shortid.generate();\n          console.log(action.data);\n          _context5.next = 7;\n          return put({\n            type: FOLLOW_SUCCESS,\n            data: {\n              content: action.data,\n              id: id\n            }\n          });\n        case 7:\n          _context5.next = 13;\n          break;\n        case 9:\n          _context5.prev = 9;\n          _context5.t0 = _context5[\"catch\"](0);\n          _context5.next = 13;\n          return put({\n            type: FOLLOW_FAILURE,\n            data: _context5.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5, null, [[0, 9]]);\n}\nfunction unfollowAPI(data) {\n  return axios.post('/api/follow', data);\n}\nfunction unfollow(action) {\n  var id;\n  return _regeneratorRuntime().wrap(function unfollow$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.prev = 0;\n          _context6.next = 3;\n          return delay(1000);\n        case 3:\n          id = shortid.generate();\n          console.log(action.data);\n          _context6.next = 7;\n          return put({\n            type: UNFOLLOW_SUCCESS,\n            data: {\n              content: action.data,\n              id: id\n            }\n          });\n        case 7:\n          _context6.next = 13;\n          break;\n        case 9:\n          _context6.prev = 9;\n          _context6.t0 = _context6[\"catch\"](0);\n          _context6.next = 13;\n          return put({\n            type: UNFOLLOW_FAILURE,\n            data: _context6.t0.response.data\n          });\n        case 13:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6, null, [[0, 9]]);\n}\nfunction watchFollow() {\n  return _regeneratorRuntime().wrap(function watchFollow$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return takeLatest(FOLLOW_REQUEST, follow);\n        case 2:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\nfunction watchUnfollow() {\n  return _regeneratorRuntime().wrap(function watchUnfollow$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return takeLatest(UNFOLLOW_REQUEST, unfollow);\n        case 2:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\nfunction watchAddPost() {\n  return _regeneratorRuntime().wrap(function watchAddPost$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return takeLatest(ADD_POST_REQUEST, addPost);\n        case 2:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\nfunction watchLoadPost() {\n  return _regeneratorRuntime().wrap(function watchLoadPost$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return throttle(5000, LOAD_POSTS_REQUEST, loadPost);\n        case 2:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\nfunction watchRemovePost() {\n  return _regeneratorRuntime().wrap(function watchRemovePost$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return takeLatest(REMOVE_POST_REQUEST, removePost);\n        case 2:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\nfunction watchAddComment() {\n  return _regeneratorRuntime().wrap(function watchAddComment$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return takeLatest(ADD_COMMENT_REQUEST, addComment);\n        case 2:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\nexport default function postSaga() {\n  return _regeneratorRuntime().wrap(function postSaga$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return all([fork(watchAddPost), fork(watchFollow), fork(watchUnfollow), fork(watchLoadPost), fork(watchRemovePost), fork(watchAddComment)]);\n        case 2:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}","map":{"version":3,"names":["loadPost","addPost","removePost","addComment","follow","unfollow","watchFollow","watchUnfollow","watchAddPost","watchLoadPost","watchRemovePost","watchAddComment","postSaga","axios","all","delay","put","fork","takeLatest","throttle","generateDummyPost","REMOVE_POST_SUCCESS","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_POST_REQUEST","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","REMOVE_POST_REQUEST","LOAD_POSTS_REQUEST","LOAD_POSTS_SUCCESS","LOAD_POSTS_FAILURE","shortid","ADD_POST_TO_ME","REMOVE_POST_OF_ME","loadPostAPI","data","get","action","console","log","type","response","addPostAPI","post","id","generate","content","removePostAPI","error","REMOVE_POST_FAILURE","addCommentAPI","postId","followAPI","FOLLOW_SUCCESS","FOLLOW_FAILURE","unfollowAPI","UNFOLLOW_SUCCESS","UNFOLLOW_FAILURE","FOLLOW_REQUEST","UNFOLLOW_REQUEST"],"sources":["C:/Dev/next_react_node/front/sagas/post.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { all, delay, put, fork, takeLatest, throttle } from \"redux-saga/effects\";\r\nimport { generateDummyPost,REMOVE_POST_SUCCESS,ADD_POST_SUCCESS, ADD_POST_FAILURE, ADD_POST_REQUEST, ADD_COMMENT_REQUEST, ADD_COMMENT_SUCCESS, ADD_COMMENT_FAILURE, REMOVE_POST_REQUEST, LOAD_POSTS_REQUEST, LOAD_POSTS_SUCCESS, LOAD_POSTS_FAILURE } from \"../reducers/post\";\r\nimport shortid from \"shortid\";\r\nimport { ADD_POST_TO_ME, REMOVE_POST_OF_ME } from '../reducers/user';\r\n\r\n\r\n\r\nfunction loadPostAPI(data) {\r\n    return axios.get('/api/post', data)\r\n}\r\n\r\nfunction* loadPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n\r\n        console.log(action.data+'data 뭐야 씨발')\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_SUCCESS,\r\n            data: generateDummyPost(10),\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: LOAD_POSTS_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction addPostAPI(data) {\r\n    return axios.post('/api/post', data)\r\n}\r\n\r\nfunction* addPost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: ADD_POST_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n        yield put({\r\n            type: ADD_POST_TO_ME, data:id\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction removePostAPI(data) {\r\n    return axios.delete('/api/post', data)\r\n}\r\n\r\nfunction* removePost(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        yield put({\r\n\r\n            type: REMOVE_POST_SUCCESS,\r\n            data: action.data\r\n        });\r\n\r\n        yield put({\r\n            type: REMOVE_POST_OF_ME, \r\n            data:action.data\r\n        })\r\n    } catch (err) {\r\n        console.error(err)\r\n        yield put({\r\n\r\n            type: REMOVE_POST_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction addCommentAPI(data) {\r\n    return axios.post(`/api/post/${data.postId}/comment`, data)\r\n}\r\n\r\nfunction* addComment(action) {\r\n    try {\r\n\r\n        // const result = yield call(addCommentAPI,action.data)\r\n        yield delay(1000);\r\n        console.log('코멘트 사가')\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_SUCCESS,\r\n            data: action.data\r\n        })\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: ADD_COMMENT_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction followAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* follow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: FOLLOW_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: FOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction unfollowAPI(data) {\r\n    return axios.post('/api/follow', data)\r\n}\r\n\r\nfunction* unfollow(action) {\r\n    try {\r\n\r\n        // const result = yield call(addPostAPI,action.data)\r\n        yield delay(1000);\r\n        const id = shortid.generate();\r\n        console.log(action.data)\r\n        yield put({\r\n\r\n            type: UNFOLLOW_SUCCESS,\r\n            data: {\r\n                content: action.data,\r\n                id\r\n\r\n            }\r\n\r\n        });\r\n\r\n    } catch (err) {\r\n\r\n        yield put({\r\n\r\n            type: UNFOLLOW_FAILURE,\r\n            data: err.response.data\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* watchFollow() {\r\n    yield takeLatest(FOLLOW_REQUEST, follow);\r\n}\r\nfunction* watchUnfollow() {\r\n    yield takeLatest(UNFOLLOW_REQUEST, unfollow);\r\n}\r\n\r\n\r\n\r\nfunction* watchAddPost() {\r\n    yield takeLatest(ADD_POST_REQUEST, addPost);\r\n}\r\nfunction* watchLoadPost() {\r\n    yield throttle(5000,LOAD_POSTS_REQUEST, loadPost);\r\n}\r\nfunction* watchRemovePost() {\r\n    yield takeLatest(REMOVE_POST_REQUEST, removePost);\r\n}\r\n\r\nfunction* watchAddComment() {\r\n    yield takeLatest(ADD_COMMENT_REQUEST, addComment);\r\n}\r\n\r\n\r\nexport default function* postSaga() {\r\n    yield all([\r\n        fork(watchAddPost),\r\n        fork(watchFollow),\r\n        fork(watchUnfollow),\r\n        fork(watchLoadPost),\r\n        fork(watchRemovePost),\r\n        fork(watchAddComment),\r\n    ])\r\n}"],"mappings":"+CACA;AAAA,sDAWUA,QAAQ;EAAA,mDAgCRC,OAAO;EAAA,mDAqCPC,UAAU;EAAA,mDA+BVC,UAAU;EAAA,mDA2BVC,MAAM;EAAA,mDAiCNC,QAAQ;EAAA,mDA8BRC,WAAW;EAAA,mDAGXC,aAAa;EAAA,mDAMbC,YAAY;EAAA,oDAGZC,aAAa;EAAA,oDAGbC,eAAe;EAAA,oDAIfC,eAAe;EAAA,oDAKAC,QAAQ;AAlOjC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,KAAK,EAAEC,GAAG,EAAEC,IAAI,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,oBAAoB;AAChF,SAASC,iBAAiB,EAACC,mBAAmB,EAACC,gBAAgB,EAAEC,gBAAgB,EAAEC,gBAAgB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,mBAAmB,EAAEC,kBAAkB,EAAEC,kBAAkB,EAAEC,kBAAkB,QAAQ,kBAAkB;AAC7Q,OAAOC,OAAO,MAAM,SAAS;AAC7B,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,kBAAkB;AAIpE,SAASC,WAAW,CAACC,IAAI,EAAE;EACvB,OAAOvB,KAAK,CAACwB,GAAG,CAAC,WAAW,EAAED,IAAI,CAAC;AACvC;AAEA,SAAUpC,QAAQ,CAACsC,MAAM;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAIjB,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UAEjBwB,OAAO,CAACC,GAAG,CAACF,MAAM,CAACF,IAAI,GAAC,YAAY,CAAC;UAAA;UAErC,OAAMpB,GAAG,CAAC;YAENyB,IAAI,EAAEX,kBAAkB;YACxBM,IAAI,EAAEhB,iBAAiB,CAAC,EAAE;UAE9B,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAIF,OAAMJ,GAAG,CAAC;YAENyB,IAAI,EAAEV,kBAAkB;YACxBK,IAAI,EAAE,YAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAOV,SAASO,UAAU,CAACP,IAAI,EAAE;EACtB,OAAOvB,KAAK,CAAC+B,IAAI,CAAC,WAAW,EAAER,IAAI,CAAC;AACxC;AAEA,SAAUnC,OAAO,CAACqC,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAIhB,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UACX8B,EAAE,GAAGb,OAAO,CAACc,QAAQ,EAAE;UAC7BP,OAAO,CAACC,GAAG,CAACF,MAAM,CAACF,IAAI,CAAC;UAAA;UACxB,OAAMpB,GAAG,CAAC;YAENyB,IAAI,EAAEnB,gBAAgB;YACtBc,IAAI,EAAE;cACFW,OAAO,EAAET,MAAM,CAACF,IAAI;cACpBS,EAAE,EAAFA;YAEJ;UAEJ,CAAC,CAAC;QAAA;UAAA;UAEF,OAAM7B,GAAG,CAAC;YACNyB,IAAI,EAAER,cAAc;YAAEG,IAAI,EAACS;UAC/B,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAGF,OAAM7B,GAAG,CAAC;YAENyB,IAAI,EAAElB,gBAAgB;YACtBa,IAAI,EAAE,aAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAMV,SAASY,aAAa,CAACZ,IAAI,EAAE;EACzB,OAAOvB,KAAK,UAAO,CAAC,WAAW,EAAEuB,IAAI,CAAC;AAC1C;AAEA,SAAUlC,UAAU,CAACoC,MAAM;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAInB,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UAAA;UACjB,OAAMC,GAAG,CAAC;YAENyB,IAAI,EAAEpB,mBAAmB;YACzBe,IAAI,EAAEE,MAAM,CAACF;UACjB,CAAC,CAAC;QAAA;UAAA;UAEF,OAAMpB,GAAG,CAAC;YACNyB,IAAI,EAAEP,iBAAiB;YACvBE,IAAI,EAACE,MAAM,CAACF;UAChB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAEFG,OAAO,CAACU,KAAK,cAAK;UAAA;UAClB,OAAMjC,GAAG,CAAC;YAENyB,IAAI,EAAES,mBAAmB;YACzBd,IAAI,EAAE,aAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAMV,SAASe,aAAa,CAACf,IAAI,EAAE;EACzB,OAAOvB,KAAK,CAAC+B,IAAI,qBAAcR,IAAI,CAACgB,MAAM,eAAYhB,IAAI,CAAC;AAC/D;AAEA,SAAUjC,UAAU,CAACmC,MAAM;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAInB,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UACjBwB,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;UAAA;UACrB,OAAMxB,GAAG,CAAC;YAENyB,IAAI,EAAEf,mBAAmB;YACzBU,IAAI,EAAEE,MAAM,CAACF;UACjB,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAGF,OAAMpB,GAAG,CAAC;YAENyB,IAAI,EAAEd,mBAAmB;YACzBS,IAAI,EAAE,aAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAMV,SAASiB,SAAS,CAACjB,IAAI,EAAE;EACrB,OAAOvB,KAAK,CAAC+B,IAAI,CAAC,aAAa,EAAER,IAAI,CAAC;AAC1C;AAEA,SAAUhC,MAAM,CAACkC,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAIf,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UACX8B,EAAE,GAAGb,OAAO,CAACc,QAAQ,EAAE;UAC7BP,OAAO,CAACC,GAAG,CAACF,MAAM,CAACF,IAAI,CAAC;UAAA;UACxB,OAAMpB,GAAG,CAAC;YAENyB,IAAI,EAAEa,cAAc;YACpBlB,IAAI,EAAE;cACFW,OAAO,EAAET,MAAM,CAACF,IAAI;cACpBS,EAAE,EAAFA;YAEJ;UAEJ,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAIF,OAAM7B,GAAG,CAAC;YAENyB,IAAI,EAAEc,cAAc;YACpBnB,IAAI,EAAE,aAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKV,SAASoB,WAAW,CAACpB,IAAI,EAAE;EACvB,OAAOvB,KAAK,CAAC+B,IAAI,CAAC,aAAa,EAAER,IAAI,CAAC;AAC1C;AAEA,SAAU/B,QAAQ,CAACiC,MAAM;EAAA;EAAA;IAAA;MAAA;QAAA;UAAA;UAAA;UAIjB,OAAMvB,KAAK,CAAC,IAAI,CAAC;QAAA;UACX8B,EAAE,GAAGb,OAAO,CAACc,QAAQ,EAAE;UAC7BP,OAAO,CAACC,GAAG,CAACF,MAAM,CAACF,IAAI,CAAC;UAAA;UACxB,OAAMpB,GAAG,CAAC;YAENyB,IAAI,EAAEgB,gBAAgB;YACtBrB,IAAI,EAAE;cACFW,OAAO,EAAET,MAAM,CAACF,IAAI;cACpBS,EAAE,EAAFA;YAEJ;UAEJ,CAAC,CAAC;QAAA;UAAA;UAAA;QAAA;UAAA;UAAA;UAAA;UAIF,OAAM7B,GAAG,CAAC;YAENyB,IAAI,EAAEiB,gBAAgB;YACtBtB,IAAI,EAAE,aAAIM,QAAQ,CAACN;UACvB,CAAC,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAMV,SAAU9B,WAAW;EAAA;IAAA;MAAA;QAAA;UAAA;UACjB,OAAMY,UAAU,CAACyC,cAAc,EAAEvD,MAAM,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAE5C,SAAUG,aAAa;EAAA;IAAA;MAAA;QAAA;UAAA;UACnB,OAAMW,UAAU,CAAC0C,gBAAgB,EAAEvD,QAAQ,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAKhD,SAAUG,YAAY;EAAA;IAAA;MAAA;QAAA;UAAA;UAClB,OAAMU,UAAU,CAACM,gBAAgB,EAAEvB,OAAO,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAE/C,SAAUQ,aAAa;EAAA;IAAA;MAAA;QAAA;UAAA;UACnB,OAAMU,QAAQ,CAAC,IAAI,EAACU,kBAAkB,EAAE7B,QAAQ,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAErD,SAAUU,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UACrB,OAAMQ,UAAU,CAACU,mBAAmB,EAAE1B,UAAU,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAGrD,SAAUS,eAAe;EAAA;IAAA;MAAA;QAAA;UAAA;UACrB,OAAMO,UAAU,CAACO,mBAAmB,EAAEtB,UAAU,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA;AAIrD,eAAe,SAAUS,QAAQ;EAAA;IAAA;MAAA;QAAA;UAAA;UAC7B,OAAME,GAAG,CAAC,CACNG,IAAI,CAACT,YAAY,CAAC,EAClBS,IAAI,CAACX,WAAW,CAAC,EACjBW,IAAI,CAACV,aAAa,CAAC,EACnBU,IAAI,CAACR,aAAa,CAAC,EACnBQ,IAAI,CAACP,eAAe,CAAC,EACrBO,IAAI,CAACN,eAAe,CAAC,CACxB,CAAC;QAAA;QAAA;UAAA;MAAA;IAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}