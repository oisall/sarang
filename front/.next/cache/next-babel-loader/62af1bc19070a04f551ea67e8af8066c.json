{"ast":null,"code":"var _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\pages\\\\post\\\\[id].js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport { END } from 'redux-saga';\nimport axios from 'axios';\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\nimport wrapper from '../../store/configureStore';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\nconst Post = () => {\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  // if (router.isFallback) {\n  //   return <div>Loading...</div>\n  // }\n\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  })), __jsx(PostCard, {\n    post: singlePost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\n// export async function getStaticPaths() {\n//   return {\n//     paths: [\n//       { params: { id: '1' } },\n//       { params: { id: '2' } },\n//       { params: { id: '3' } },\n//       { params: { id: '4' } },\n//     ],\n//     fallback: true,\n//   };\n// }\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  params,\n  query,\n  req,\n  res\n}) => {\n  console.log('컨텍스트');\n  const cookie = req ? req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    data: params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":{"version":3,"names":["React","useSelector","Head","useRouter","END","axios","LOAD_POST_REQUEST","wrapper","PostCard","AppLayout","LOAD_MY_INFO_REQUEST","Post","singlePost","state","post","router","id","query","User","nickname","content","getServerSideProps","store","params","req","res","console","log","cookie","headers","defaults","Cookie","dispatch","type","data","sagaTask","toPromise"],"sources":["C:/Dev/next_react_node/front/pages/post/[id].js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport { END } from 'redux-saga';\r\n\r\nimport axios from 'axios';\r\nimport { LOAD_POST_REQUEST } from '../../reducers/post';\r\nimport wrapper from '../../store/configureStore';\r\nimport PostCard from '../../components/PostCard';\r\nimport AppLayout from '../../components/AppLayout';\r\nimport { LOAD_MY_INFO_REQUEST } from '../../reducers/user';\r\n\r\n\r\nconst Post = () => {\r\n  const { singlePost } = useSelector((state) => state.post);\r\n  const router = useRouter();\r\n  const { id } = router.query;\r\n\r\n  // if (router.isFallback) {\r\n  //   return <div>Loading...</div>\r\n  // }\r\n\r\n  return (\r\n    <AppLayout>\r\n      <Head>\r\n        <title>\r\n          {singlePost.User.nickname}\r\n          님의 글\r\n        </title>\r\n        <meta name=\"description\" content={singlePost.content} />\r\n        <meta property=\"og:title\" content={`${singlePost.User.nickname}님의 게시글`} />\r\n        <meta property=\"og:description\" content={singlePost.content} />\r\n        {/* <meta property=\"og:image\" content={singlePost.Images[0] ? singlePost.Images[0].src : 'https://nodebird.com/favicon.ico'} />\r\n        <meta property=\"og:url\" content={`https://nodebird.com/post/${id}`} /> */}\r\n      </Head>\r\n      <PostCard post={singlePost} />\r\n    </AppLayout>\r\n  );\r\n};\r\n\r\n// export async function getStaticPaths() {\r\n//   return {\r\n//     paths: [\r\n//       { params: { id: '1' } },\r\n//       { params: { id: '2' } },\r\n//       { params: { id: '3' } },\r\n//       { params: { id: '4' } },\r\n//     ],\r\n//     fallback: true,\r\n//   };\r\n// }\r\nexport const getServerSideProps = wrapper.getServerSideProps((store)=>async({params, query, req, res})=>{\r\n    \r\n    console.log('컨텍스트')\r\n\r\n    const cookie = req ? req.headers.cookie :'';\r\n    axios.defaults.headers.Cookie='';\r\n    if(req && cookie){\r\n\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    \r\n    store.dispatch({\r\n        type:LOAD_MY_INFO_REQUEST,\r\n    })\r\n    \r\n    store.dispatch({\r\n        type: LOAD_POST_REQUEST,\r\n        data: params.id\r\n\r\n    });\r\n\r\n    store.dispatch(END);\r\n    \r\n    await store.sagaTask.toPromise();\r\n\r\n})\r\n\r\nexport default Post;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,WAAW;AAC5B,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,GAAG,QAAQ,YAAY;AAEhC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,QAAQ,MAAM,2BAA2B;AAChD,OAAOC,SAAS,MAAM,4BAA4B;AAClD,SAASC,oBAAoB,QAAQ,qBAAqB;AAG1D,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAM;IAAEC;EAAW,CAAC,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EACzD,MAAMC,MAAM,GAAGZ,SAAS,EAAE;EAC1B,MAAM;IAAEa;EAAG,CAAC,GAAGD,MAAM,CAACE,KAAK;;EAE3B;EACA;EACA;;EAEA,OACE,MAAC,SAAS;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACR,MAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGL,UAAU,CAACM,IAAI,CAACC,QAAQ,wBAEnB,EACR;IAAM,IAAI,EAAC,aAAa;IAAC,OAAO,EAAEP,UAAU,CAACQ,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EACxD;IAAM,QAAQ,EAAC,UAAU;IAAC,OAAO,EAAG,GAAER,UAAU,CAACM,IAAI,CAACC,QAAS,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC1E;IAAM,QAAQ,EAAC,gBAAgB;IAAC,OAAO,EAAEP,UAAU,CAACQ,OAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CAG1D,EACP,MAAC,QAAQ;IAAC,IAAI,EAAER,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACpB;AAEhB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMS,kBAAkB,GAAGd,OAAO,CAACc,kBAAkB,CAAEC,KAAK,IAAG,OAAM;EAACC,MAAM;EAAEN,KAAK;EAAEO,GAAG;EAAEC;AAAG,CAAC,KAAG;EAEpGC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EAEnB,MAAMC,MAAM,GAAGJ,GAAG,GAAGA,GAAG,CAACK,OAAO,CAACD,MAAM,GAAE,EAAE;EAC3CvB,KAAK,CAACyB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAC,EAAE;EAChC,IAAGP,GAAG,IAAII,MAAM,EAAC;IAEbvB,KAAK,CAACyB,QAAQ,CAACD,OAAO,CAACE,MAAM,GAAGH,MAAM;EAC1C;EAEAN,KAAK,CAACU,QAAQ,CAAC;IACXC,IAAI,EAACvB;EACT,CAAC,CAAC;EAEFY,KAAK,CAACU,QAAQ,CAAC;IACXC,IAAI,EAAE3B,iBAAiB;IACvB4B,IAAI,EAAEX,MAAM,CAACP;EAEjB,CAAC,CAAC;EAEFM,KAAK,CAACU,QAAQ,CAAC5B,GAAG,CAAC;EAEnB,MAAMkB,KAAK,CAACa,QAAQ,CAACC,SAAS,EAAE;AAEpC,CAAC,CAAC;AAEF,eAAezB,IAAI"},"metadata":{},"sourceType":"module"}