{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from \"antd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  // const [commentText,onChnageCommentText] = useInput('');\n  const {\n    0: commentText,\n    1: setCommentText\n  } = useState('');\n  const onChnageCommentText = useCallback(e => {\n    setCommentText(e.target.value);\n  }, []);\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment\n  }, __jsx(Form.Item, null, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChnageCommentText,\n    rows: 4\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    loading: addCommentLoading,\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\uC090\\uC57D\")));\n};\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}