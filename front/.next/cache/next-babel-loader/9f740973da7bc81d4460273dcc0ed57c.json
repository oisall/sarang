{"ast":null,"code":"var _this = this,\n  _jsxFileName = \"C:\\\\Dev\\\\next_react_node\\\\front\\\\components\\\\CommentForm.js\",\n  _s = $RefreshSig$();\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { Form, Button, Input } from \"antd\";\nimport useInput from \"../hooks/useInput\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n  var post = _ref.post;\n  var dispatch = useDispatch();\n  var id = useSelector(function (state) {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  // const [commentText,onChnageCommentText] = useInput('');\n  var _useState = useState(''),\n    commentText = _useState[0],\n    setCommentText = _useState[1];\n  var onChnageCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  var onSubmitComment = useCallback(function () {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChnageCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n_s(CommentForm, \"ri2LC60eCOo8TOpd8vzKX/e32kM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = CommentForm;\nCommentForm.prototype = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\nvar _c;\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["React","useCallback","useState","PropTypes","Form","Button","Input","useInput","useDispatch","useSelector","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","commentText","setCommentText","onChnageCommentText","e","target","value","onSubmitComment","console","log","type","data","content","postId","userId","prototype","object","isRequired"],"sources":["C:/Dev/next_react_node/front/components/CommentForm.js"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { Form,Button, Input } from \"antd\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm=({post})=>{\r\n    const dispatch = useDispatch();\r\nconst id = useSelector((state)=>state.user.me?.id);\r\n// const [commentText,onChnageCommentText] = useInput('');\r\nconst [commentText,setCommentText] = useState('');\r\nconst onChnageCommentText=useCallback((e)=>{\r\n    setCommentText(e.target.value)\r\n},[])\r\nconst onSubmitComment= useCallback(()=>{\r\nconsole.log(post.id,commentText)\r\ndispatch({\r\n    type:ADD_COMMENT_REQUEST,\r\n    data:{content:commentText,postId:post.id,userId:id}\r\n})\r\n\r\n},[commentText])\r\n\r\n    return(\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item>\r\n                <Input.TextArea \r\n                value={commentText}\r\n                onChange={onChnageCommentText}\r\n                rows={4}\r\n                />\r\n                <Button type='primary' htmlType='submit'>삐약</Button>\r\n                \r\n            \r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nCommentForm.prototype={\r\n    post: PropTypes.object.isRequired\r\n}\r\nexport default CommentForm;"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,IAAI,EAACC,MAAM,EAAEC,KAAK,QAAQ,MAAM;AACzC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,IAAMC,WAAW,GAAC,SAAZA,WAAW,OAAW;EAAA;EAAA,IAARC,IAAI,QAAJA,IAAI;EACpB,IAAMC,QAAQ,GAAGL,WAAW,EAAE;EAClC,IAAMM,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAK;IAAA;IAAA,yBAAGA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EAClD;EACA,gBAAqCZ,QAAQ,CAAC,EAAE,CAAC;IAA1CgB,WAAW;IAACC,cAAc;EACjC,IAAMC,mBAAmB,GAACnB,WAAW,CAAC,UAACoB,CAAC,EAAG;IACvCF,cAAc,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC,EAAC,EAAE,CAAC;EACL,IAAMC,eAAe,GAAEvB,WAAW,CAAC,YAAI;IACvCwB,OAAO,CAACC,GAAG,CAACd,IAAI,CAACE,EAAE,EAACI,WAAW,CAAC;IAChCL,QAAQ,CAAC;MACLc,IAAI,EAACjB,mBAAmB;MACxBkB,IAAI,EAAC;QAACC,OAAO,EAACX,WAAW;QAACY,MAAM,EAAClB,IAAI,CAACE,EAAE;QAACiB,MAAM,EAACjB;MAAE;IACtD,CAAC,CAAC;EAEF,CAAC,EAAC,CAACI,WAAW,CAAC,CAAC;EAEZ,OACI,MAAC,IAAI;IAAC,QAAQ,EAAEM,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC5B,MAAC,IAAI,CAAC,IAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACN,MAAC,KAAK,CAAC,QAAQ;IACf,KAAK,EAAEN,WAAY;IACnB,QAAQ,EAAEE,mBAAoB;IAC9B,IAAI,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EACN,EACF,MAAC,MAAM;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAAY,CAG5C,CACT;AAEf,CAAC;AAAA,GA/BKT,WAAW;EAAA,QACIH,WAAW,EACrBC,WAAW;AAAA;AAAA,KAFhBE,WAAW;AAiCjBA,WAAW,CAACqB,SAAS,GAAC;EAClBpB,IAAI,EAAET,SAAS,CAAC8B,MAAM,CAACC;AAC3B,CAAC;AACD,eAAevB,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}